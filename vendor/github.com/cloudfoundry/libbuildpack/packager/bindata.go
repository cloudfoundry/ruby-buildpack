// Code generated for package packager by go-bindata DO NOT EDIT. (@generated)
// sources:
// scaffold/.envrc
// scaffold/.gitignore
// scaffold/README.md
// scaffold/VERSION
// scaffold/bin/compile
// scaffold/bin/detect
// scaffold/bin/finalize
// scaffold/bin/release
// scaffold/bin/supply
// scaffold/fixtures/.gitkeep
// scaffold/fixtures/simple_test/some_file.txt
// scaffold/manifest.yml
// scaffold/scripts/brats.sh
// scaffold/scripts/build.sh
// scaffold/scripts/install_go.sh
// scaffold/scripts/install_tools.sh
// scaffold/scripts/integration.sh
// scaffold/scripts/unit.sh
// scaffold/src/LANGUAGE/Gopkg.toml
// scaffold/src/LANGUAGE/finalize/_finalize.go
// scaffold/src/LANGUAGE/finalize/_finalize_suite_test.go
// scaffold/src/LANGUAGE/finalize/_finalize_test.go
// scaffold/src/LANGUAGE/finalize/cli/_cli_suite_test.go
// scaffold/src/LANGUAGE/finalize/cli/_main.go
// scaffold/src/LANGUAGE/hooks/_hooks_debug.go
// scaffold/src/LANGUAGE/hooks/_hooks_suite_test.go
// scaffold/src/LANGUAGE/integration/_integration_suite_test.go
// scaffold/src/LANGUAGE/integration/_simple_test.go
// scaffold/src/LANGUAGE/supply/_supply.go
// scaffold/src/LANGUAGE/supply/_supply_suite_test.go
// scaffold/src/LANGUAGE/supply/_supply_test.go
// scaffold/src/LANGUAGE/supply/cli/_cli_suite_test.go
// scaffold/src/LANGUAGE/supply/cli/_main.go
// scaffold/src/LANGUAGE/vendor/.gitkeep
package packager

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Envrc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xad\x28\xc8\x2f\x2a\x51\x70\xf7\x0f\x70\x0c\xf1\xb0\x55\x09\x08\x77\xe1\x82\x0b\x39\x79\xfa\x81\x45\xf4\xf5\x92\x32\xf3\x60\xc2\x10\x75\x60\x49\x2b\x15\x10\x07\x10\x00\x00\xff\xff\x4b\xa8\xfe\x63\x42\x00\x00\x00")

func EnvrcBytes() ([]byte, error) {
	return bindataRead(
		_Envrc,
		".envrc",
	)
}

func Envrc() (*asset, error) {
	bytes, err := EnvrcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".envrc", size: 66, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x4e\xe7\xd2\x4b\xca\xcc\xe3\xd2\xd2\xab\xca\x2c\x00\x04\x00\x00\xff\xff\x8f\xe4\xfc\x8c\x0e\x00\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 14, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcf\x4f\x23\x3b\x0c\xbe\xcf\x5f\x61\x89\xc3\x7b\x48\x30\x23\xae\xdc\xf8\xf9\x5e\xb5\xb0\x8b\xd8\xf6\xb2\x15\x2a\x69\xc6\xd3\xc9\x92\x89\xa3\xd8\xa1\x3b\xff\xfd\x2a\x09\x6d\xb7\x54\xe2\xc2\x75\x2f\x28\x99\xd8\x9f\xfd\xd9\xdf\x47\x8f\x8e\xe0\x32\x1a\xdb\x7a\xa5\x5f\x60\xc6\x18\xe0\x9a\x74\x1c\xd0\x89\x12\x43\xae\xaa\x8e\x36\x11\xc6\xad\x40\x7a\xdc\x85\x57\xd5\x94\x60\x99\x6e\x20\xbd\xe1\x72\x4c\x0f\x27\x10\xa2\xcb\xb1\x1d\x59\x4b\xeb\x94\xa9\x69\x18\x94\x6b\xa1\x0b\x34\xe4\xa7\x6d\xf4\x3f\x0c\xad\x09\xa8\x85\xc2\x78\x5e\x55\x67\x35\x7c\xa7\x18\x34\xe6\xa8\x1a\xdd\x6b\xd0\xd0\x19\x8b\x60\xdc\x7e\xe2\x2e\xad\xae\x2a\x00\x80\xe7\xe7\xe7\xa5\xe2\x3e\x9f\xb9\x60\x94\xfc\xcd\x6b\x09\x9b\x12\xb0\x19\xbc\x35\xdd\x98\x01\x7d\x20\x8d\xcc\x1b\xfc\x2e\x4a\x0c\x78\x02\xc6\xb1\x28\x6b\x61\x9e\xca\xb8\xd7\xa7\x7f\x7b\x11\xcf\xe7\x4d\x53\xee\xb5\x43\x69\x8e\x61\xdd\x1b\xdd\xc3\xda\x58\x0b\x2a\x0a\x0d\x4a\x8c\x56\xd6\x8e\xfb\x0d\xc0\xba\x47\x07\x23\x45\xd0\xbd\x72\x2b\xdc\xb6\x6e\x90\xeb\xcc\x79\xf2\x56\x6d\xcb\xee\x34\xfd\x51\x2b\x0c\x87\xdc\xea\x86\x75\x30\x5e\xb8\x79\xeb\x71\x21\x44\x96\xeb\xb7\xe7\x4c\xf4\xac\x2e\x8b\xda\x1f\xd9\x21\xd6\x61\xbd\xf2\x69\x0f\x69\xc6\x79\xfa\x57\x96\x62\x0b\xb7\x14\x5d\x1b\xc6\x02\x35\xf3\x96\xd4\xbb\x22\x20\x94\xa8\x86\xfd\x78\x48\xdb\x27\x9f\x44\x55\xe6\xe3\x51\xa7\x0d\x18\x81\xe5\x08\x4e\x0d\x78\xd8\x9c\xee\x40\x07\x54\x82\xa7\x3b\xf0\xf9\xe5\x6c\x72\x77\xfd\x70\x71\xf5\x65\xf1\xf5\xe2\xfe\xe6\xe9\xcf\x0f\x3f\x26\x0f\x8b\xdb\xc9\xdd\xcd\xe2\xe1\x62\xfa\xff\x13\x9c\x6d\x40\x7c\xe4\x1e\x86\x71\xa1\xbc\x87\xf9\xe9\x12\xde\x41\xec\xb8\x26\xb1\x4f\x91\xc5\xb8\x55\x55\x6d\x85\xce\x10\xb9\xc8\x71\x7e\x15\xc5\x2a\xe6\x9d\x18\x56\x46\xfa\xb8\xac\x35\x0d\x8d\x4e\x74\xbb\xc2\xb6\xb1\x66\xb9\xed\xb9\xd1\x25\xeb\x18\xba\xa0\x06\x5c\x53\x78\x81\x8e\x42\x72\x89\x4b\xde\x30\x4e\x70\x15\xb2\xdf\x40\x90\x25\x49\x62\x4a\xf9\xf8\xd7\x59\x9f\x76\xd6\x63\x74\x10\x9d\x91\x32\xda\x8f\xdc\x94\xa2\xde\x9b\x28\x65\x1f\xec\xe7\x63\x4b\x6e\x83\xf7\xb0\xd2\xe1\x9e\x42\x1a\x76\x47\x61\x28\x68\x5a\x39\x58\xa6\x65\xc6\x64\x0e\x07\xff\x65\x35\xc1\x5c\x7f\x4a\x66\x75\x11\xf2\x23\x7a\x0a\x49\xca\x30\x61\x8e\xc8\x55\xf5\xcd\xa3\x03\xe5\xc0\xa4\x7b\xaa\x97\xd5\xe5\x03\xfd\x44\x2d\x29\x09\xae\x0d\x6b\xab\xcc\x90\xfe\xed\x4c\xf7\xa4\x07\x86\x01\x7f\x79\x0c\x26\xff\x38\xd8\xec\x67\x47\x02\x23\x4a\x9e\x90\x6b\xb1\xcd\xb2\xf6\x81\xda\xa8\x33\xbf\xc8\x58\x57\xbf\x03\x00\x00\xff\xff\x02\xba\xa9\x49\x63\x06\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 1635, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _version = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x32\xd0\x33\xd0\x33\x00\x04\x00\x00\xff\xff\x86\x4b\x5b\x2e\x05\x00\x00\x00")

func versionBytes() ([]byte, error) {
	return bindataRead(
		_version,
		"VERSION",
	)
}

func version() (*asset, error) {
	bytes, err := versionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VERSION", size: 5, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binCompile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x8b\x13\x31\x14\x85\xdf\xf3\x2b\x8e\xd9\x08\xbb\xc2\x74\x46\xdf\x57\xe8\x4e\x2b\x53\x54\xb6\x6c\x77\xdf\x84\x92\x4e\xee\x30\x97\xa6\x49\x48\x32\xd5\x2a\xfe\x77\x69\xcb\x76\x47\x51\xf0\xf1\x9e\xc0\x77\xf2\xdd\x7b\xf5\xaa\x1c\x52\x2c\x37\xec\x4a\x72\x7b\x6c\x74\xea\xc5\x15\x1e\x7b\x4e\x48\x6d\xe4\x90\xc1\x09\x1a\x86\x42\xa4\x56\x67\x32\xd8\x0c\xa7\x2c\x44\xbf\x67\x43\x06\x9d\x8f\x68\xfd\x2e\xe8\xcc\x1b\xb6\x9c\x0f\xf8\xca\xb9\x47\x43\xd1\x6f\x07\x68\x67\xe0\xad\xa1\x88\x3d\xc5\xc4\xde\x25\xf8\x0e\xb5\xf5\x83\xc1\x07\x3f\x38\x13\x0f\xe2\x0a\x8b\x73\x8d\x83\xb6\x99\xa2\xd3\x99\xf7\x84\xec\x71\xfc\x56\x1a\x42\xb0\x87\x13\xe8\x38\x76\xec\xb4\xe5\xef\x24\x44\xa2\x8c\x82\x06\x8f\xc0\x81\x3a\xcd\x56\x88\xbb\xa7\xc5\xa7\xd9\x7a\xb6\x78\xb8\x55\x6f\x45\x3d\xad\x9b\xf9\x79\x78\x77\x7e\x59\x4e\xeb\x8f\xeb\xe5\xf4\xb1\xb9\x55\xd7\x86\xa3\xd3\x3b\x82\xba\x8e\xa4\x8d\x65\xb7\x45\xd1\x41\xfd\xb8\x9b\xae\x9a\xf5\xea\xfe\xe9\xa1\x9e\xbf\x2e\xdf\xfc\xbc\xb9\x11\xb3\xf9\x72\x75\xc2\x48\x75\xe1\x97\x93\xf6\xa8\xd0\x9d\x0d\xa4\x10\xbb\xad\xe1\x88\x22\x40\x5d\x6a\x5f\x32\xa9\x9e\x19\x65\x25\xc7\xf1\x88\x17\xa2\xef\xd8\xd2\xc4\x48\x21\xa8\xed\x3d\x24\x7d\x0b\x3e\x66\x5c\xea\xbf\xa8\xe6\xfe\xf3\xfc\x8f\x66\xbc\xff\x07\xa6\xac\xaa\xaa\x5a\x27\xca\x85\xa1\x90\x0a\xc3\x71\x92\x7a\x29\x84\xfa\x7d\x13\xe5\x68\xc5\x23\x90\x84\x7c\x11\x91\x23\x01\x89\xea\xaf\x88\xe7\xb3\xfc\x37\xe4\x57\x00\x00\x00\xff\xff\x2f\x90\x23\x7d\x79\x02\x00\x00")

func binCompileBytes() ([]byte, error) {
	return bindataRead(
		_binCompile,
		"bin/compile",
	)
}

func binCompile() (*asset, error) {
	bytes, err := binCompileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/compile", size: 633, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\xc5\x15\x9e\x0b\xb7\x6b\x51\x64\xca\xee\x25\x40\x66\xfd\x30\x10\x11\x5b\x12\x28\x3a\x4e\xde\x3e\xa0\xbd\x05\x9c\x78\xfc\xee\x03\x87\xaf\x71\xed\x32\x06\x2e\x23\x95\x07\x82\xef\xd9\x0d\xb0\x35\x91\x52\x54\xfc\x87\x95\xe7\xf4\x9d\x58\x4e\x6e\xb0\xc1\x25\x73\x47\x8f\xc2\x4d\x61\x90\x2c\x5c\xa8\x63\xcb\xa4\x99\x04\x55\x50\xaa\x42\x2b\x7c\x6b\xf3\x0b\x9a\x09\xbb\xa3\xf9\x78\xdf\xe3\x62\x17\x13\x4d\xe7\xe9\x0f\x57\x61\x25\xc4\x9a\x08\x99\x84\x8c\xa0\x27\x2b\x7e\xc0\xb7\x8f\x32\x77\xc4\xba\x34\xaf\x1c\x66\xc2\xc6\x9a\x77\xc0\xb7\x06\x5f\xd2\x51\xfb\x45\xb5\x37\x36\xee\xe4\xdc\x91\xb8\x77\x00\x00\x00\xff\xff\xad\x3a\x34\xb0\xe5\x00\x00\x00")

func binDetectBytes() ([]byte, error) {
	return bindataRead(
		_binDetect,
		"bin/detect",
	)
}

func binDetect() (*asset, error) {
	bytes, err := binDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/detect", size: 229, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binFinalize = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x5d\x6b\xdb\x30\x14\x7d\xbf\xbf\xe2\xce\xd5\xa0\x1d\xb8\x62\x5f\x2f\x03\x0f\xdc\x38\x73\xcc\xc2\x1c\x9c\x04\xfc\x96\x2a\xb6\x6c\x8b\x3a\x92\xd0\xc7\x18\x0b\xfe\xef\xc3\x71\xeb\x2d\xa3\x7a\x3a\x47\x3a\x9c\x73\x75\xcf\xcd\x1b\xea\xad\xa1\x47\x21\x29\x97\x3f\xf1\xc8\x6c\x07\x37\xb8\xeb\x84\x45\x5b\x19\xa1\x1d\x6a\xc3\x35\x33\xdc\x22\x93\x35\x56\x4a\x36\xa2\xf5\x23\x75\x1d\x47\xa6\x35\x36\xca\x60\xcf\xbc\xac\xba\x7b\x00\xcb\x1d\x86\xdc\x2b\xd4\x42\xf3\x86\x89\x1e\xe0\x61\x9f\xad\x93\x43\x92\x15\x11\x79\x0f\x8b\x78\xb1\x5a\x4e\xe4\x03\x24\xcb\xcd\x76\xc2\x1f\x27\x9c\x25\x65\x44\x3e\xc1\xa6\xc8\xbf\x65\xeb\x67\xd9\xf9\xf3\x97\x70\x00\xe0\xbf\xb4\x32\x0e\x2f\x66\x9b\x78\xf1\xfd\xf2\xf8\x58\x0b\x23\xd9\x89\x23\xb9\x35\x9c\xd5\xbd\x90\x4f\x18\x36\x48\xce\x0f\xf1\x76\x75\xd8\xe6\xfb\x62\xb1\x7c\x4b\xdf\x0d\x77\x8f\x60\x95\x37\x15\xc7\x80\x5c\x39\xd0\xe9\x8f\x96\x0a\x69\x1d\xeb\xfb\x43\xab\xee\x6d\x17\x80\xf2\x4e\x7b\x77\xa8\x85\x89\xc8\xed\xe9\xc9\xf1\x93\xc6\xb0\xc6\xd0\x61\x23\x24\xeb\xc5\x6f\x5e\x96\xe5\x1d\x00\xaf\x3a\x85\x41\x38\x9e\xaf\x58\x78\x29\x85\x6c\xb1\x55\x78\xf4\xa2\xaf\x67\x6d\x00\x69\x5e\xe4\xf9\x2e\x22\xa9\xca\xa6\xa0\x44\x18\xda\x2a\x4c\xf3\x4d\xbc\x5b\x45\xd7\x43\xe1\xff\xb2\x4b\x3b\xb3\x6b\xa8\x90\xfc\x9d\x8f\xbe\x84\xe0\xf9\xbc\x8e\x7f\xa4\xfb\x38\x5d\x0e\xc3\x7c\x4b\xab\x5e\x00\xbc\xaa\x7f\x5e\xc5\x98\x18\x60\x40\xe6\x66\x46\xf2\xd2\xcc\x8c\xb3\xa4\x1c\xf1\x3f\xcd\x04\xf0\x27\x00\x00\xff\xff\xef\xcb\x5f\x0b\x3b\x02\x00\x00")

func binFinalizeBytes() ([]byte, error) {
	return bindataRead(
		_binFinalize,
		"bin/finalize",
	)
}

func binFinalize() (*asset, error) {
	bytes, err := binFinalizeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/finalize", size: 571, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binRelease = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8f\x31\x6b\xfb\x30\x10\x47\x77\x7f\x8a\xdf\x3f\x06\x67\x32\xe6\xdf\x31\x94\x2c\x85\xce\x1d\x3a\x06\xc2\x49\x77\xae\x44\x6d\x49\xe8\x4e\x49\xfc\xed\x8b\xd3\x8e\x6f\x78\xf0\x5e\xff\x6f\x6a\x5a\x27\x17\xd3\x24\xe9\x06\x47\x1a\xba\x1e\x3b\x56\x59\x84\x54\xf0\xea\x5a\x5c\x78\xe4\x58\xcf\x5d\x8f\xcf\x10\x15\xea\x6b\x2c\x86\x52\xf3\x2d\xb2\x28\x66\x11\x76\xe4\xbf\xb1\x8a\x11\x93\x11\x2c\xe3\x6d\xc9\x8d\xf1\x9e\x5b\xe2\xba\x21\x26\x8e\x9e\x2c\xa6\x2f\x84\x7c\x87\x05\x01\x95\x02\x0d\xb9\x2d\x0c\x27\x90\x87\xf8\x66\xc2\x5d\x27\x3e\x64\x8c\x82\xc3\x38\x8e\x97\xc4\x32\x53\x5b\xec\x5a\x6a\xf6\xa2\x7a\xb5\xad\x88\x9e\x2e\x09\xb8\x8b\x3b\xe1\x78\x1e\x5e\xf0\x34\x3e\x7e\x73\xb5\x88\x8f\xf3\x06\xc2\x9f\x09\x35\xaa\x06\x9f\xd7\x95\x12\x63\xce\x15\xb6\x4f\x3c\xb7\xca\x5e\x3d\x0c\x90\x47\x34\xfc\x3f\x1e\xba\x9f\x00\x00\x00\xff\xff\x03\x76\xa7\xd0\x10\x01\x00\x00")

func binReleaseBytes() ([]byte, error) {
	return bindataRead(
		_binRelease,
		"bin/release",
	)
}

func binRelease() (*asset, error) {
	bytes, err := binReleaseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/release", size: 272, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binSupply = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\xab\xe2\x30\x10\xc5\xdf\xe7\x53\xcc\xd6\x2c\xe8\x42\x37\xec\x9f\xd7\x2e\xd4\xb6\xd4\xb2\xb2\x95\xaa\xd0\xb7\x5a\x9b\xd8\x06\x6b\x12\x92\x74\xd9\x45\xfc\xee\x17\xad\xd7\x8b\x97\x9b\xa7\x33\xe1\x37\x73\x66\xce\xe4\x13\xdd\x0b\x49\xf7\xb5\xed\x60\x82\x9b\x4e\x58\xb4\x8d\x11\xda\xa1\x36\xea\xaf\x60\xdc\x22\xe3\x9a\x4b\xc6\x65\x23\xb8\xc5\x83\x32\x58\x4b\xac\xb5\x06\x00\xcb\x1d\xfa\x7c\x50\xa8\x85\xe6\x87\x5a\xf4\x00\xf3\x6d\xb6\x8c\xab\x38\x2b\x02\xf2\x0d\xa2\x30\x5a\x24\x63\xf1\x1d\xe2\x64\xb5\x1e\xf5\x8f\x51\x67\x71\x19\x90\x9f\x00\xfc\x9f\x56\xc6\xe1\xad\x73\x15\x46\xbf\x6f\xd0\x8e\x09\x23\xeb\x13\x47\x32\x35\xbc\x66\xbd\x90\x47\xf4\x0f\x48\xce\xf3\x70\xbd\xa8\xd6\xf9\xb6\x88\x92\xcf\xf4\xcb\x65\xb6\x03\xab\x06\xd3\x70\xf4\xc8\xd3\x04\x3a\x9e\x61\xa9\x90\xd6\xd5\x7d\x5f\xb5\xea\xab\xed\x3c\x50\x83\xd3\x83\xab\x98\x30\x01\x99\x9e\x8e\x8e\x9f\x34\xfa\x0c\x7d\x87\x76\xd0\xba\xff\x5f\x96\xe5\x0c\x78\xd3\x29\xf4\xfc\xeb\xfb\x85\xc5\x20\xa5\x90\x2d\xb6\x0a\xf7\x83\xe8\xd9\x1d\xf4\x20\xcd\x8b\x3c\xdf\x04\x24\x55\xd9\xe8\x11\x0b\x43\x5b\x85\x69\xbe\x0a\x37\x8b\xe0\x79\x1f\x7c\x8f\xdd\x72\x7f\xcc\xf4\x15\x92\xb7\xd5\xe8\x68\x81\xe7\xf3\x32\xfc\x93\x6e\xc3\x34\xb9\x5c\xee\x7f\xb4\xe9\x05\x7c\x80\xde\xcf\xbf\x5a\x79\xe8\x91\x47\xf4\xd7\xe2\x35\xfa\x87\xce\xe2\xd2\x83\x97\x00\x00\x00\xff\xff\xf3\x21\x3a\xf6\xfb\x01\x00\x00")

func binSupplyBytes() ([]byte, error) {
	return bindataRead(
		_binSupply,
		"bin/supply",
	)
}

func binSupply() (*asset, error) {
	bytes, err := binSupplyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/supply", size: 507, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func fixturesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_fixturesGitkeep,
		"fixtures/.gitkeep",
	)
}

func fixturesGitkeep() (*asset, error) {
	bytes, err := fixturesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesSimple_testSome_fileTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x48\xcd\xc9\xc9\x57\x08\xcf\x2f\xca\x49\xd1\xe3\x02\x04\x00\x00\xff\xff\x12\xc1\x8c\xfa\x0d\x00\x00\x00")

func fixturesSimple_testSome_fileTxtBytes() ([]byte, error) {
	return bindataRead(
		_fixturesSimple_testSome_fileTxt,
		"fixtures/simple_test/some_file.txt",
	)
}

func fixturesSimple_testSome_fileTxt() (*asset, error) {
	bytes, err := fixturesSimple_testSome_fileTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/simple_test/some_file.txt", size: 13, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcf\x41\x4b\xc4\x30\x10\x05\xe0\x7b\x7e\x45\xfe\x40\xbb\xf7\xde\x0a\x96\x45\xd0\x15\x56\xf4\x22\x12\xb2\xc9\xeb\x3a\x38\x9d\x86\x4c\x22\xd4\x65\xff\xbb\x50\xa5\xc2\xde\xe6\x9b\xf7\x2e\xaf\x69\x1a\xc3\x5e\xce\xd5\x9f\xd1\xd9\xcb\xe5\xa1\x3f\xec\x5f\xfa\xfd\x70\xbd\x9a\x88\xd1\x57\x2e\xee\x0b\x59\x69\x16\xed\xec\xdb\xbb\x89\x48\x90\x08\x09\x8b\x8b\x48\x19\xc1\x17\x9a\xc5\x45\x5f\x70\x53\xa0\xbf\x87\x21\x09\x5c\x23\xdc\x48\x0c\xed\x8c\xb5\x8d\x3d\x0e\xfd\xdd\xe3\xd0\x4e\x71\xd5\xeb\x70\x7c\xbe\x7f\x3a\xac\xf7\x89\x64\x17\x51\x10\xca\xc6\x30\x4f\x89\x18\x9b\xb5\xa6\xc4\xcb\xc6\x91\xc4\x33\x7d\xff\xe7\x19\x0c\xaf\xbf\x9e\xbc\xd0\x08\x2d\xed\x32\xb1\x49\x19\x2e\xf9\xf0\xb9\x4e\xd5\x90\x29\x15\xdd\x9d\x2a\x71\x6c\xf5\xc3\xfc\x04\x00\x00\xff\xff\x82\xf3\xc2\xa3\x0a\x01\x00\x00")

func manifestYmlBytes() ([]byte, error) {
	return bindataRead(
		_manifestYml,
		"manifest.yml",
	)
}

func manifestYml() (*asset, error) {
	bytes, err := manifestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifest.yml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBratsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x51\x4b\xc3\x30\x10\xc7\xdf\xf3\x29\xce\xae\x0f\x2a\xa4\x51\x7c\x1b\xec\xa1\xd3\x31\x45\xdc\x64\xab\x4f\x22\x23\x4d\x6f\x6b\x68\x9a\x84\xdc\x75\x0a\x63\xdf\x5d\x1c\x0c\x86\x2f\x07\x77\xbf\x83\xfb\xdd\x7f\x74\xa5\x06\x4a\xaa\xb6\x5e\xa1\xdf\x43\xad\xa9\x15\x23\xa8\x90\x18\xb8\xd5\x7f\x05\xc1\x84\x3e\x5a\x87\x0d\xd4\xd6\xeb\x64\x91\x20\x6c\x4f\xa0\x1e\xac\x6b\xa2\x36\x1d\x81\x4e\x08\xdf\x21\x75\xd6\xef\x40\x13\xe0\x4f\x44\xc3\xd8\x08\x41\xc8\x20\x71\x08\x10\x6d\xc4\xad\xb6\x4e\x08\xd3\x40\x96\x5f\x43\x63\x93\xd7\x3d\x42\x96\x1f\xa6\xe5\xfa\x79\xb3\x5e\x7e\xac\x1e\x67\x9f\x77\x5f\xc7\x0c\x6e\x54\x51\x64\x82\xc2\x90\x0c\x42\x81\x7e\x9f\x8c\x28\x14\x99\x64\x23\x93\xb2\x9e\x58\x3b\xb7\xe1\x10\x1c\x15\xd4\x0a\x31\x7f\x59\xbc\xce\x97\x9b\xc5\xf2\x69\xb6\x9e\xe4\x87\xcb\x76\x2c\x1f\x8e\x67\x5e\x56\xd5\xec\xed\xbd\xba\x58\x39\x4f\xc6\xf2\xfe\x78\x32\xa3\x64\xd4\xad\xaa\x93\x66\x12\x02\x4d\x1b\x20\x5b\x0d\x1e\xa6\xe7\x57\x61\x35\x78\xb6\x3d\x42\x69\x0c\x46\xd6\xde\xe0\x29\x2e\xca\xc4\xce\xfa\x6e\x17\x40\x26\x90\x72\xeb\x74\x87\x25\x33\xf6\x91\x69\x92\xff\xbb\x06\xd2\x87\x06\x09\xf2\x4b\x51\xf1\x1b\x00\x00\xff\xff\xfe\x9d\xe5\x60\x8c\x01\x00\x00")

func scriptsBratsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBratsSh,
		"scripts/brats.sh",
	)
}

func scriptsBratsSh() (*asset, error) {
	bytes, err := scriptsBratsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/brats.sh", size: 396, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBuildSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x4a\xc5\x30\x14\x80\xe1\x3d\x4f\x71\x8c\x77\xd0\x21\x8d\x2f\x70\x87\x2a\xa5\x0e\x62\xc1\xd2\x49\x44\xd2\xe4\xb4\x1e\x38\x26\x21\x31\xb5\x5a\xfa\xee\xa2\xe8\xe0\x78\xd7\x7f\xf8\xf8\xcf\xcf\x74\xc9\x49\x8f\xe4\x35\xfa\x05\x46\x93\x5f\x44\xc6\x37\x50\xb8\x96\x00\x91\x22\x4e\x86\x58\x08\xeb\x40\x1e\x2e\xc0\x51\xf2\xe6\x15\x41\x1e\xb6\xeb\xba\xbf\x7d\xee\xbb\xe1\xe1\xa6\x79\xbc\x7a\xda\x25\x5c\xea\xaa\x92\x22\x87\x92\x2c\x42\x85\x7e\x49\x56\x88\xb6\xeb\xfa\x23\x93\x2f\x2b\xcc\x01\xc6\x42\xec\x40\xb1\x9b\xd8\xcc\xf9\x28\x55\x06\xf5\x2e\x41\x05\xf8\x1e\xc8\x25\x46\xfe\x80\x6d\xbb\xab\xef\xdb\xa1\x6e\x9b\x7d\xff\x6d\xda\x32\x9d\x44\x4d\xe4\x0d\xd3\x27\xfe\xc7\xfe\xea\x0f\xf7\x15\x00\x00\xff\xff\x09\x7c\x6d\x88\xfa\x00\x00\x00")

func scriptsBuildShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBuildSh,
		"scripts/build.sh",
	)
}

func scriptsBuildSh() (*asset, error) {
	bytes, err := scriptsBuildShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/build.sh", size: 250, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_goSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x5f\x6f\xda\x4a\x14\xc4\xdf\xf7\x53\x4c\x7c\x2d\xe5\x5e\xa4\xf5\x1f\xc0\x24\xe1\xca\x95\x22\x48\xd3\xa8\x28\x48\xd0\xb4\x0f\x51\x14\x2d\xde\x5d\x7b\x15\xdb\x6b\x79\xd7\x2d\x24\xcd\x77\xaf\x0c\x21\x10\xda\x3c\xf4\x3c\x21\x71\x3c\x7b\x66\xe6\xf7\xcf\x91\xbf\x50\xa5\xbf\x60\x26\x23\xc4\x08\x0b\x2a\x1a\x8d\x4a\x55\x42\x32\x95\x13\x72\x39\xbd\xff\x7a\x31\x9b\x5f\x4d\xaf\x63\x27\xf4\xc2\x9e\x17\x39\x84\x28\x89\x5b\xb8\xa3\x8f\xf7\xf3\x2f\xe7\xa3\xcf\x88\x63\x38\x89\xcc\x55\xd9\x2c\xa5\xe9\x39\xb8\xfb\x1f\x36\x13\x25\x01\x80\xcb\xe9\xfd\xfc\xd3\x79\x37\x1a\xc4\x8e\x14\x5c\xc8\xb0\xcf\x65\x20\x93\xde\x49\x2f\xea\x0f\x82\xc1\x49\x14\x84\x7c\xd1\x0d\x82\x33\xde\x0b\xa3\x70\xb0\x90\xe2\xac\x1b\x9e\x04\xfd\x28\xe8\x9e\x2e\xfa\x89\x3c\x95\x3c\x18\x30\x99\x9c\x71\xe9\x10\x91\x1b\x41\x00\x91\x64\x1a\x0e\x36\xd3\xe9\x5c\xcc\x66\xd3\x59\xa7\x83\x9b\xd2\x34\x55\xa5\x6b\x2b\x38\x8c\x65\xc9\x83\x73\xb8\xbb\x9b\xb9\x10\xc8\xac\xad\xcc\xd0\xf7\xb9\x4e\x8c\x97\xe4\xba\xe1\x52\x37\x25\xaf\x57\x9e\xae\x53\x9f\x8b\xef\x69\xa3\xb8\xf0\xb9\xa8\x72\xbd\xa2\xac\xaa\x8c\xbf\x96\x35\x5e\x66\x8b\x1c\x52\xd7\x28\x74\x2d\xa0\x4a\xa9\xd7\x4f\x2d\x95\x45\x48\xa4\x22\x44\x2c\xdb\x3b\x70\xa9\xaf\x4a\x63\x59\x9e\x8f\x55\x1d\x3b\xbe\x2d\x2a\x3f\xd5\xee\x2e\x52\x87\x14\x0f\x5c\xd5\xa0\x15\xdc\xfd\xdd\x97\x84\x8f\x40\xe5\xdb\x3f\xfc\x54\xaf\xeb\x4a\xf5\x5e\xc8\x37\xb3\x49\xbc\xf5\xb2\x68\x54\xce\xab\xf5\x91\x7f\x70\x54\x89\x92\x8b\x32\x51\xc2\xb4\x42\xa9\x76\x9f\x76\xb7\x3c\x7b\xeb\x02\x29\x2b\xf8\xa0\x4f\xdd\xa7\x6d\xbb\xcf\x74\xbd\xb5\x29\x71\x18\x0c\x4f\x9f\x3d\xcb\x6a\x2f\x7d\x24\xaf\xe9\xd2\x76\x3e\x60\xac\x7f\x94\xb9\x66\x1c\xa9\xc6\x1b\xe5\x36\x9c\xa4\xa9\x73\x50\x03\x3a\x01\xa5\xb5\xb0\xf5\x0a\x61\xb4\xfd\x49\xb9\xc8\xd9\x0a\x5d\xb8\x37\xb3\x09\xa8\xc6\x4b\x54\x7b\x2f\x8d\xa7\xdf\xae\x27\xd3\xf3\xf1\x96\x26\xf7\x5f\x93\x31\xd3\x14\xa0\x0c\xdd\x68\x70\xf0\x05\x7e\x22\x69\x2c\x28\xc7\x31\x8e\xdb\x14\xc3\xff\x5a\x91\x36\xd5\x5b\xb8\x07\x5a\x38\x8a\xe1\xbe\x5a\xc4\xdd\x3e\xbe\xef\xa0\xf6\xb2\x5a\x28\x53\x30\x9b\x64\x43\xa4\xda\xfe\xae\x2b\x96\x95\x48\x5a\x1a\x77\xea\xce\x46\x75\x43\x0a\xd0\xb2\x02\x58\x56\x63\xf9\x28\x0f\x3d\xd0\xd1\x01\x15\x40\x5d\x1c\x46\x23\xd5\x5f\xb1\xf2\x8e\x9f\x91\x6e\x72\x8e\x52\x5b\xf0\x5d\x89\x6f\x99\xfe\x15\x00\x00\xff\xff\xad\x49\x68\x14\x29\x04\x00\x00")

func scriptsInstall_goShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_goSh,
		"scripts/install_go.sh",
	)
}

func scriptsInstall_goSh() (*asset, error) {
	bytes, err := scriptsInstall_goShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_go.sh", size: 1065, mode: os.FileMode(493), modTime: time.Unix(1576511105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_toolsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x4f\x4b\x03\x31\x10\x05\xf0\x7b\x3e\xc5\x74\x2d\xa5\x15\x36\xf1\xee\x49\x45\xf0\x26\x58\x3c\x95\x22\xf9\x33\xc9\x0e\x4d\x67\x96\x64\x53\x10\xf1\xbb\x4b\xc1\xf5\xa0\x1e\x7a\x99\xb9\x3c\x7e\xef\x5d\x2d\x8c\x23\x36\xce\xd6\x41\x55\x9c\xa0\xc7\x26\x30\xd2\x88\xd1\x52\x56\xca\x07\xe8\x96\x6b\x08\x54\xd8\x1e\x11\xba\xe5\xc7\xfd\xdd\xf6\xe9\x6d\xfb\xfc\xfa\xf2\xf0\xb8\xbb\xd9\x7f\x76\xb0\x31\x5a\x77\xaa\x4a\x2b\x1e\x41\x23\x9f\x8a\x57\x8a\x22\xec\x60\x01\x7d\x04\x7d\xe6\x13\xf1\x21\x09\xec\x6f\x61\x1a\x90\xd5\xda\x07\xa8\xc5\x9b\x6b\x73\x42\x0e\x52\x4c\xa2\x69\x68\x4e\x7b\x39\x1a\xe1\x4a\xdf\xf9\xf9\xc1\x6a\x05\x49\x80\xb8\x4e\x36\xe7\x8d\x8a\xf4\xdb\x77\x8d\x72\x18\xad\x3f\xf4\xe7\x63\x13\x96\x8b\xba\x7c\x96\x16\xa2\x34\x0e\xe5\xdd\x64\x72\x3f\x8c\x99\x99\xff\xe4\x3f\x6b\xbe\x02\x00\x00\xff\xff\x59\x76\x9d\xd6\x44\x01\x00\x00")

func scriptsInstall_toolsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_toolsSh,
		"scripts/install_tools.sh",
	)
}

func scriptsInstall_toolsSh() (*asset, error) {
	bytes, err := scriptsInstall_toolsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_tools.sh", size: 324, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsIntegrationSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\xcf\x4f\x6b\x32\x31\x10\x06\xf0\x7b\x3e\xc5\xbc\xeb\x1e\xde\x16\x66\x23\x2d\xf4\x20\xec\x41\xad\xd8\x52\xaa\xc5\x5d\x4f\xa5\x48\xcc\x8e\x26\x18\x93\x25\x93\xb5\x07\xf1\xbb\x17\x5a\x84\xa5\x5f\xa0\xc7\xf9\x03\xcf\xef\x19\xfc\x93\x1d\x47\xb9\xb5\x5e\x92\x3f\xc1\x56\xb1\x11\x03\x58\x75\x9e\x21\x19\x02\xeb\x13\xed\xa3\x4a\x36\x78\x48\xc4\x89\x05\x53\x02\xa4\x2e\x40\x6b\x5b\xda\x29\xeb\x84\xd0\x0d\x64\xf9\x7f\x68\x6c\xf4\xea\x48\x90\xe5\xe7\xc9\xb8\x7a\xda\x54\xcb\xf5\x6a\x3a\x7b\x1f\x7e\x5c\x32\xb8\x91\x45\x91\x09\x0e\x5d\xd4\x04\x05\xf9\x53\xd4\xa2\x90\xac\xa3\x6d\x13\x4b\xeb\x39\x29\xe7\x36\x29\x04\xc7\x05\x1b\x21\xe6\xcf\x8b\x97\xf9\x72\xb3\x58\x3e\xce\xaa\x32\x3f\xf7\xc7\x11\xde\x5f\xae\xf7\x71\x5d\xcf\x5e\xdf\xea\xde\xcb\x75\x33\xc2\xbb\xcb\xb7\x8c\xa3\x96\xb7\xb2\xd7\x43\x08\xd2\x26\x40\xb6\xea\x3c\xac\xbd\x56\xda\x50\x03\x93\xce\xba\xa6\x55\xfa\x90\x89\xbd\xf5\x87\x7d\x00\x8c\x80\xb8\x73\xea\x40\xe3\x94\xe8\xd8\x26\x2e\xf3\x5f\x19\x80\x3e\x34\xc4\x90\xf7\x79\x80\xc8\x2e\x7c\x56\x2d\xe9\xda\x44\x62\x13\x5c\x53\x3e\x0c\x01\x11\x10\x7f\xd2\xca\x9d\x72\x4c\x7d\xc7\xf4\x0f\x14\xe2\x2b\x00\x00\xff\xff\x37\xfc\x7a\x68\xfb\x01\x00\x00")

func scriptsIntegrationShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsIntegrationSh,
		"scripts/integration.sh",
	)
}

func scriptsIntegrationSh() (*asset, error) {
	bytes, err := scriptsIntegrationShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/integration.sh", size: 507, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsUnitSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xb1\x4a\x34\x31\x10\x00\xe0\x3e\x4f\x31\xff\xde\x15\xbf\xe2\x26\xbe\x80\x85\x8a\x60\xa7\xdc\x61\x25\x72\xcc\x66\xe7\x76\x87\x8d\x93\x30\x33\xb9\x46\x7c\x77\xc1\xca\xfe\xe3\xdb\xfd\x4b\xdd\x34\x4d\x2c\x89\xe4\x02\x13\xda\x1a\x76\x70\xe8\x62\xe0\x2b\x41\x17\x76\x70\x32\x37\x38\x57\x05\x5f\xd9\x60\xea\x5c\xe6\x86\x79\x0b\xc1\xc8\x61\xa4\x5e\xa1\x71\xa3\x33\x72\x09\x21\xcf\x30\xec\xff\xc3\xcc\x2a\xf8\x49\x30\xec\xbf\x1e\xee\x8f\xcf\xa7\xe3\xcb\xdb\xe1\xf1\xe9\xfd\xf6\xe3\x7b\x80\xab\x14\xe3\x10\xac\x76\xcd\x04\x91\xe4\xa2\x39\xc4\x64\x59\xb9\xb9\x25\x16\x73\x2c\xe5\xe4\xb5\x16\x8b\xb6\xfe\x96\xa6\x39\x5d\x27\x16\xa7\x45\xd1\xb9\x4a\x8a\x31\x2c\x2c\xdb\x52\x61\x54\x18\x6d\xe3\xf6\x8a\x79\xc3\x85\xee\x26\x45\xb7\x9b\x3f\x36\xfc\x04\x00\x00\xff\xff\x47\xb5\x22\x14\xe5\x00\x00\x00")

func scriptsUnitShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsUnitSh,
		"scripts/unit.sh",
	)
}

func scriptsUnitSh() (*asset, error) {
	bytes, err := scriptsUnitShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/unit.sh", size: 229, mode: os.FileMode(493), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageGopkgToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xcd\x6a\x1c\x31\x10\x84\xef\x7a\x0a\x31\xbe\x4b\x3b\xd9\x3f\x13\xf0\x39\xf7\x5c\x97\x39\xb4\x5a\x3d\x1a\xb1\x92\x7a\xd2\x92\x86\xac\x9f\x3e\xac\x03\xde\x04\x1c\x08\xf8\xd6\xd0\x55\x5f\x15\xf5\xa4\xbf\xd3\x4c\xa2\x1b\xeb\xa5\xb5\xb5\x7e\xb5\x36\xc4\xb6\x74\x67\x90\xb3\x0d\x9c\xa0\x04\xeb\x69\xb5\x2e\xb1\xb3\x19\x6a\x23\xb1\x9e\xb1\xda\x6f\xbc\x5e\x83\x69\x9c\x93\xc9\x5e\x3d\xe9\x99\x45\x7b\x6a\x10\x13\x79\xfd\x78\x6a\xcf\xd8\x33\x95\x06\x2d\x72\x31\x4a\x09\xfd\xe8\x51\xc8\xeb\x17\x7d\x19\xfe\xca\xe2\x90\xc8\xd6\xee\x90\x73\x86\xe2\xeb\x30\x29\x75\xb9\xf0\x46\x22\xd1\xd3\x34\x29\xad\x2b\x77\x41\xd2\x2f\x7a\xf8\xa0\xed\x5c\x0b\xb7\x38\xdf\x1e\x07\x08\x2e\x71\x23\xbb\x8d\xe6\x60\xce\xa6\x81\x98\xf0\x3a\x28\xad\x0b\xe4\x37\x4a\x78\xeb\x19\xcb\xbb\xc5\x6c\xe3\x70\x4f\x45\x2e\xb5\x09\xc4\xd2\xa6\x49\xbd\xab\x1f\x59\x98\xb8\xfb\x99\x7b\xf1\x72\xb3\x29\x3a\xd7\x63\xf2\x2b\xe0\x75\x50\x4e\xa0\xe0\x72\xd7\xff\x9e\xeb\xbf\x78\x5c\x6a\xb4\x21\x96\x6b\xe0\x4f\x11\x38\x53\x80\x7f\x10\xfe\x58\xf2\x03\x3f\x25\x78\x05\x49\x36\xf0\x2a\xfc\xf3\x36\x28\xa1\x2d\xd6\xc8\xe5\xae\x03\x40\x07\xcf\xfb\x79\x7f\x82\xe3\x11\x70\x3f\xa2\x73\xe7\x11\x77\xa7\xe3\xe1\x0c\xfb\x2f\xcf\xb8\x43\x3f\x9e\x76\x87\x41\xfd\x0a\x00\x00\xff\xff\x89\x92\x12\x3f\x51\x02\x00\x00")

func srcLanguageGopkgTomlBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageGopkgToml,
		"src/LANGUAGE/Gopkg.toml",
	)
}

func srcLanguageGopkgToml() (*asset, error) {
	bytes, err := srcLanguageGopkgTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/Gopkg.toml", size: 593, mode: os.FileMode(420), modTime: time.Unix(1576521564, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalizeGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xcd\x6e\x9c\x30\x10\x3e\x33\x4f\x31\xe2\x04\x51\x65\xee\xb9\x25\xd9\x34\x8a\x94\x76\xab\xa6\x3f\x87\xaa\x07\x2f\x0c\x5e\xab\xc6\xb6\x86\xb1\x94\xed\x6a\xdf\xbd\x82\x05\x92\xdd\xaa\x52\x4f\xcb\x01\x19\x7b\xbe\xf9\x7e\xcc\x44\x5d\xff\xd2\x86\xb0\xb5\x5e\x3b\xfb\x9b\x00\x6c\x17\x03\x0b\x16\x90\xe5\x36\xe4\x00\x59\x6e\xac\x6c\xd3\x46\xd5\xa1\xab\x6a\x17\x52\xd3\x86\xe4\x1b\xde\x55\xce\x6e\x36\xc9\xba\x66\xe8\x91\x43\x09\x20\xbb\x48\xf8\x2c\xda\x10\xa3\xf5\x42\xdc\xea\x9a\x70\x0f\x59\x55\x7d\x59\xaf\xd6\xd7\xf8\x4c\x84\x5d\x60\xc2\x10\xc5\x06\xdf\xa3\x16\xdc\x8a\xc4\xfe\xba\xaa\xfe\x87\xa5\xda\xb8\xb0\xa9\x3a\xdd\x0b\x71\xd5\x8f\x44\xca\x04\xc8\x6e\x87\x82\x95\xe5\xa2\xc4\x5e\xd8\x7a\x03\xd9\x8a\xe2\x5f\x1b\xfd\x63\xf3\x72\xb6\x73\x52\x73\x98\x2c\x7c\xd0\xde\xb6\xd4\xcb\x05\x4c\x74\x13\xd5\x68\xe3\xc6\xb9\x15\x45\xf2\x0d\xf9\x7a\xf7\x8d\xb8\x1f\xda\x17\x47\x71\x25\xfe\xf8\x79\x26\xf3\xd1\xf7\xa2\x9d\xbb\x48\xd8\x76\xe6\x1a\x85\xae\xa8\xd5\xc9\xc9\x24\x71\x51\x58\xbc\x85\xab\x57\x2b\xef\x90\x98\x03\x97\x90\x4d\x92\x5f\x8f\xfe\x0d\x99\x9b\x8e\xd0\x05\xb9\xf6\x6e\x77\x4a\x7b\x5e\x39\xa7\x73\x17\xba\x4e\xfb\xe6\x02\xd9\xd4\x47\xa6\x31\x99\xfb\x17\xaa\x93\xd0\xa2\xcd\x06\xf5\x9d\xad\x10\x9f\x2c\xe7\x53\xa5\xd4\x99\xcd\x75\x92\x98\xa4\x68\x2c\x2f\x45\x91\x83\x61\xdd\x2d\xdf\x9a\x4d\xff\x16\xb9\x70\x4d\x21\xcf\x01\xbc\x9f\x46\x7a\xec\x94\x6a\x19\xfc\x2f\x7f\xf6\xbc\x80\x6c\x9a\x57\x9c\x06\x17\xb2\x39\xb8\x39\x41\xc8\x9e\x82\xc1\xf1\xb9\x3a\xb9\xad\xa7\x60\x06\xc0\x01\xa0\x4d\xbe\xc6\xa2\xc5\xab\x85\xb3\xc4\xcf\xc9\x17\x93\xad\x81\xb9\x1d\xca\xd5\x2d\x19\xeb\x9f\x85\x62\x91\xdf\x05\xdf\x5a\x93\x06\xe9\xb8\xdf\x3f\xdd\x7c\x7c\xf8\x7a\xf3\x70\x7f\x38\xe4\x25\x0c\xf7\x84\xc7\x8b\xfa\xc4\x14\x35\x13\xea\x18\xb1\x0d\x8c\x4e\x27\x5f\x6f\x71\x4b\x4c\xe3\x4b\x29\x05\x90\x31\x49\x62\x8f\xde\x3a\x38\xc0\x9f\x00\x00\x00\xff\xff\x63\x63\x62\x46\xd3\x04\x00\x00")

func srcLanguageFinalize_finalizeGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalizeGo,
		"src/LANGUAGE/finalize/_finalize.go",
	)
}

func srcLanguageFinalize_finalizeGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalizeGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize.go", size: 1235, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalize_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\x83\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x1f\x7d\x0b\xe9\x59\xbd\x97\x34\x5d\xd3\x45\xdd\x88\xd9\x5c\x5a\xfa\xee\x45\xb0\xb7\xde\x06\x66\xf8\x66\x0b\x71\x0e\x89\x70\x62\x09\x0b\x3f\xe9\xaa\x54\x14\x80\xd7\x2d\xef\x8a\x0e\x4c\x83\x36\xb1\x3e\xea\xad\x89\x79\x6d\xb3\x14\x6e\x13\xcb\x9c\xb2\xfd\xdd\xe5\x95\x52\xb0\x00\xc6\x1e\x12\x4b\xb2\xe0\x01\xa6\x2a\x11\x47\x2a\xda\x9d\x3f\x4e\xf1\xef\x1c\x34\xa3\xc7\x17\x98\x9e\x12\x17\xa5\xbd\x0b\xbc\x5c\x82\xdc\x17\xda\xdd\x91\x3d\x98\xbe\xca\xb0\x51\x2c\x4e\xff\xd1\x7e\x05\x1c\x2a\x2b\x59\x0f\x6f\xf8\x04\x00\x00\xff\xff\x84\x15\xaf\xba\xc5\x00\x00\x00")

func srcLanguageFinalize_finalize_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalize_suite_testGo,
		"src/LANGUAGE/finalize/_finalize_suite_test.go",
	)
}

func srcLanguageFinalize_finalize_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalize_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize_suite_test.go", size: 197, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalize_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbb\x8a\xf3\x30\x10\x85\x6b\xeb\x29\x06\x55\x12\xfc\xb1\xfa\x80\x8b\x1f\x92\x85\xad\xd2\xa4\x0f\xca\x68\x2c\x0b\xdb\x1a\xaf\x2e\x7b\x25\xef\xbe\x38\xeb\x2d\x02\x5b\x0e\xdf\xe1\x3b\xc3\x59\x2c\x8e\xd6\x13\xf4\x21\xda\x29\x7c\xd2\xa5\x50\x2e\x42\x18\xe3\x79\xef\x29\x52\xb2\x85\x60\x66\x1c\x3d\x45\xd8\x65\xae\x09\xa9\xfb\x0d\xb7\x9e\x61\xb7\x73\x94\x4b\x88\xb6\x04\x8e\xdd\x9a\xcc\x77\xc7\x0f\xdb\xf4\xdd\xa3\x3e\xcc\x0b\xa7\x02\x4a\x34\x2d\x48\x1f\xca\x50\xaf\x2d\xf2\x6c\x38\xe6\x60\x7c\x88\xa3\x67\xf9\x37\xe3\x99\xbc\x95\x42\x0b\xf1\x6a\x13\x5c\xa0\x83\x03\x65\x4c\xe1\x4a\x4a\x3e\x6d\x1d\xf2\x1f\xf4\x35\xa2\xd2\xf0\x25\x9a\xe7\xa2\x64\xae\x88\x44\x2e\x3f\x80\xe6\xf8\xbe\x10\x16\xd5\xdb\x29\x93\x6e\xcf\xac\x8e\x2f\xd5\x4e\xdb\xad\x45\x73\xd3\xa2\x31\x06\xce\xa7\xc3\x69\x0f\xff\x9d\x83\xf5\xf5\x0c\x03\x25\x82\xc2\x80\x03\xe1\x08\xc8\xb1\x0f\xbe\x26\x02\x47\x0b\x45\x47\x11\x3f\xee\x25\xeb\x1a\x19\xde\x38\x8d\xe2\xa6\xc5\x77\x00\x00\x00\xff\xff\x7d\xd5\xa2\x39\x66\x01\x00\x00")

func srcLanguageFinalize_finalize_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalize_testGo,
		"src/LANGUAGE/finalize/_finalize_test.go",
	)
}

func srcLanguageFinalize_finalize_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalize_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize_test.go", size: 358, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCli_cli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x6a\xc3\x30\x10\x80\xe1\x59\xf7\x14\x87\x26\xa9\x14\xfb\x21\x0c\xa6\xb3\xed\xbd\xa8\xea\x55\x3d\x2c\x9d\x8c\x75\x5a\x12\xf2\xee\xc1\x90\x31\xdb\x0f\x1f\xfc\x47\x88\x7b\x48\x84\x25\xb0\x7c\x2b\x35\x05\xe0\x72\xd4\x53\xd1\x81\x19\xd0\x26\xd6\xff\xfe\x33\xc4\x5a\xc6\x2a\x8d\xc7\xc4\xb2\xa7\x6a\xdf\x5b\x2d\x94\x82\x05\x30\xf6\x3a\xb1\x24\x0b\x1e\xe0\xaf\x4b\xc4\x8d\x9a\x4e\x99\x9d\xe2\xc7\xcb\x86\xcd\xe3\x1d\xcc\x42\x89\x9b\xd2\x39\x07\xce\x5f\x41\x7e\x33\x9d\xee\x6a\x0f\x66\xe9\xb2\x1e\x14\x9b\xd3\x4f\xb4\x33\x4b\xc8\x7c\x23\x9c\x32\xe3\xda\x59\xc9\x7a\x78\xc0\x33\x00\x00\xff\xff\x09\x2d\x2d\xe4\xc0\x00\x00\x00")

func srcLanguageFinalizeCli_cli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCli_cli_suite_testGo,
		"src/LANGUAGE/finalize/cli/_cli_suite_test.go",
	)
}

func srcLanguageFinalizeCli_cli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCli_cli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/_cli_suite_test.go", size: 192, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCli_mainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x5f\x6f\xd3\x30\x14\xc5\x9f\xed\x4f\x71\x89\x04\x72\xa4\xc9\x63\x80\x84\x08\xea\x43\xd9\x4a\x5f\xba\x22\xad\xda\x13\x42\xc8\x4d\x6e\x52\x6b\xfe\x13\x39\x4e\x4b\xa9\xfa\xdd\x91\x53\x37\x6b\x59\x0b\x43\xbc\x54\x95\x7d\xef\x3d\xbf\x7b\x4e\x5c\x8b\xfc\x41\x54\x08\x5a\x48\x43\xa9\xd4\xb5\x75\x1e\x18\x25\xc9\x66\x33\x19\x4e\xc7\xf7\xc3\xf1\x68\xbb\xbd\x2c\xa5\x11\x4a\xfe\xc4\x84\x92\xef\x70\x7c\xb5\xb0\xf6\xa1\x49\x28\x49\x6c\xf7\xeb\xa5\xc6\x84\x52\x92\x54\xd2\x2f\xda\x39\xcf\xad\xbe\xcc\x95\x6d\x8b\xd2\xb6\xa6\x70\xeb\x4b\x25\xe7\xf3\x56\xaa\x22\x08\x27\x34\xa5\xb4\x6c\x4d\xde\xc9\xb3\x14\x36\x94\x28\x5b\x55\xe8\x20\x1b\xc0\x61\x25\x9f\xe2\x6a\xd2\xdd\x30\xdb\xf0\x99\x2f\x6c\xeb\x53\x4a\x49\x5f\x70\x23\xdd\x05\xa0\x7b\xda\x38\x46\xff\xe9\xa0\x88\xa5\x94\xc8\xb2\xab\x7c\x31\x00\x23\x55\xd0\x8c\xa2\x7c\xe4\x9c\x75\x2c\xb9\x37\x62\xae\x10\xbc\x85\x02\x3d\x3a\x2d\x0d\x42\x3f\x10\x0a\xe9\x30\xf7\xd6\xad\x33\x78\xd9\x24\x9d\x68\x4a\x09\xb1\x0d\x1f\xfd\x90\x9e\x7d\x48\x29\xd9\x52\x4a\xb4\x30\xb2\xc4\xc6\x9f\xa6\x9a\xe2\xea\x36\x16\xb0\xe3\x1d\x76\x28\x17\x10\x8c\xe4\x53\xbb\x62\xe9\x3f\x11\x2b\x2b\x8a\x03\xd8\x3d\xc5\x69\xd6\xab\xd7\x11\xb6\xf1\xe2\x8c\xe9\xb3\xee\x26\x98\x3e\x74\x55\xf3\xf5\x2a\xfb\xf6\x88\xb8\x1f\x1e\x82\x88\x84\x83\xfe\x90\x0f\xeb\x5a\xad\xbf\x2c\xd1\x39\x59\x20\xdb\x29\xf0\x1b\xac\x9b\x2e\x85\xf4\xe3\x73\x37\x12\x61\x0e\xd8\x38\x88\xaf\xb5\x82\x52\x2a\x6c\xce\xac\xf4\x3e\xae\x14\x81\xb2\x01\x44\xe9\x19\xfa\xb0\x8c\x34\xd5\xc8\x2c\xa5\xb3\x46\xa3\xf1\xec\xf9\x1c\x0d\xfa\xb6\x06\x7c\xec\x85\xa5\x70\x32\xdc\x9e\x43\xb9\x8a\x28\x65\xa0\xd8\x3f\x21\xfe\x39\xfe\x71\x41\xec\xb6\xcf\xa7\xff\x5e\x28\x21\x3b\xd3\x33\x80\xc8\x1e\xce\xae\xad\xd6\xc2\x14\x19\xc0\xab\xa3\x8c\xe2\xf9\x66\x1b\x8a\x26\xb6\x0a\x5d\x00\xfb\x8c\x7e\xf7\xa2\xe4\x77\xad\x39\xb1\x74\xcf\xfc\xe6\x89\x7d\x47\x6a\x77\xad\x19\x96\x1e\xdd\xb5\xd5\xb5\x54\xfb\x58\xff\x66\x62\xd7\x02\xb1\xe7\x8c\x59\x6f\xff\x90\xdb\x44\xb4\x26\x5f\xfc\x4f\x6c\xaa\x9b\x70\x98\xde\x19\x8c\x77\x47\x2f\x82\xc7\x2f\x26\xa0\x2b\xf4\xc8\x52\xba\xa5\xbf\x02\x00\x00\xff\xff\x0a\x48\xa6\x46\x33\x05\x00\x00")

func srcLanguageFinalizeCli_mainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCli_mainGo,
		"src/LANGUAGE/finalize/cli/_main.go",
	)
}

func srcLanguageFinalizeCli_mainGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCli_mainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/_main.go", size: 1331, mode: os.FileMode(420), modTime: time.Unix(1568814647, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageHooks_hooks_debugGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\x41\x6b\xfa\x40\x10\x47\xcf\xd9\x4f\x31\xff\x39\xed\xfe\x0f\x11\x73\x14\x7a\xd0\x5a\x14\x7a\x50\x90\x9e\x4b\x4c\x76\x75\x71\xb3\x13\x26\xb3\x05\x91\x7c\xf7\x92\x2a\xc5\x20\x94\x1e\x7a\xda\xcb\x9b\xf7\x7e\xdb\x96\xd5\xa9\x3c\x58\x38\x12\x9d\x3a\xa5\x7c\xd3\x12\x0b\x68\x95\xa1\x6b\x04\x55\x86\xd4\xa1\x52\x19\x1e\xbc\x1c\xd3\x3e\xaf\xa8\x99\x54\x81\x52\xed\x28\xc5\x9a\xcf\x93\xe0\xf7\xfb\xe4\x43\x3d\x78\x50\x19\xa5\xe4\xdc\xde\x6c\x53\xe8\x84\x53\x25\x70\x51\xd9\x3d\x96\x2f\xad\x2b\x53\x90\x35\xd1\x49\xf5\xf7\x17\xc5\x2f\x2f\x5c\x8a\x15\xf8\xe8\x45\x9b\x01\xf5\x0e\xa8\xcb\x57\x56\x6c\xfc\xd0\xb8\xd8\xbe\x2f\x5f\x16\x6f\x2b\x34\xf0\xef\x09\x10\x07\x62\x6c\x9b\xd7\xf5\x60\xd2\xd7\x95\x97\xde\xfc\x08\x14\x5f\x40\xff\xdd\xd5\xc7\xdb\xf7\x0c\x2c\xac\x23\xb6\xcf\xd4\xb4\x3e\x58\x5d\x5d\x5f\x86\xff\x23\xd9\x4e\xca\x83\x65\x03\x96\x99\x78\x18\xe3\x1a\xc9\xb7\xec\xa3\x84\xa8\x71\xbd\xd9\xbc\xee\x60\x3a\x1b\xbb\xd0\xa8\x8c\xad\x24\x8e\x10\x7d\x78\x48\x17\x06\xe6\x4e\x2c\xff\x41\xb9\x98\x8d\x54\x0f\xe1\xcf\x00\x00\x00\xff\xff\x0c\x89\x96\xfa\x20\x02\x00\x00")

func srcLanguageHooks_hooks_debugGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageHooks_hooks_debugGo,
		"src/LANGUAGE/hooks/_hooks_debug.go",
	)
}

func srcLanguageHooks_hooks_debugGo() (*asset, error) {
	bytes, err := srcLanguageHooks_hooks_debugGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/hooks/_hooks_debug.go", size: 544, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageHooks_hooks_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xb1\x8e\x83\x30\x10\x04\xd0\xda\xfb\x15\x2b\x57\xf6\xe9\x04\x7f\x71\xa2\x06\xfa\x93\xcf\xb7\x59\x56\x80\x17\xe1\x75\x15\xe5\xdf\x23\xa2\x94\xe9\x46\x7a\x9a\x99\x23\xe5\x35\x31\xe1\xa2\xba\xd6\x5f\xa3\x6a\x00\xb2\x1f\x7a\x1a\x06\x70\x1d\x7a\x16\x5b\xda\x5f\x97\x75\xef\xb5\x54\xe9\x59\xca\xca\xea\x3f\x9b\xee\xc4\xc9\x03\x38\x7f\x2d\x49\x61\x0f\x11\xe0\xd6\x4a\xc6\x99\xaa\x0d\xd7\x49\x30\xfc\x7a\x6b\x37\x47\xbc\x83\x1b\x89\xa5\x1a\x9d\x3f\x49\xb6\x21\x95\xff\x8d\xce\x70\xe5\x08\x6e\x6c\x65\x3a\x28\xd7\x60\xdf\xe8\x5f\x75\x9c\x9a\x18\xf9\x08\x0f\x78\x06\x00\x00\xff\xff\x27\x86\xa8\x48\xbc\x00\x00\x00")

func srcLanguageHooks_hooks_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageHooks_hooks_suite_testGo,
		"src/LANGUAGE/hooks/_hooks_suite_test.go",
	)
}

func srcLanguageHooks_hooks_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageHooks_hooks_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/hooks/_hooks_suite_test.go", size: 188, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegration_integration_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x5b\x6f\xdb\xbe\x15\x7f\x96\x3e\x05\x47\xa0\x05\xd5\x1a\x72\x96\x6d\x58\x37\x20\x05\x72\x6b\x93\x61\x71\x0d\xdb\xe9\x36\x14\x45\x41\x4b\x47\x32\x67\x8a\x54\x79\x49\xe3\x05\xfe\xee\x03\x2f\xb2\x65\x3b\x49\xb3\xee\xe5\xff\x90\x98\xe6\x39\xfc\xf1\xdc\x7e\xe7\xd0\x2d\x2d\x96\xb4\x06\xc4\x84\x81\x5a\x51\xc3\xa4\xf8\x66\x40\x9b\x34\x65\x4d\x2b\x95\x41\x24\x4d\x30\x88\x42\x96\x4c\xd4\xc3\x7f\x6b\x29\x70\x9a\xe0\x8a\xd3\xda\x7f\x36\xc6\x7d\x08\x30\x43\xab\xb8\x5b\x4a\x1d\xfe\x0f\xe1\x1e\x0a\xb7\x6c\xa9\x59\x0c\x2b\xc6\xc1\x2d\xdc\x86\x61\x0d\xe0\x34\x4d\x70\xcd\xcc\xc2\xce\xf3\x42\x36\xc3\x39\xa7\xa2\x1e\x6a\x68\xee\x40\xe1\x5d\x51\xc1\xa5\x2d\x2b\x69\x45\xa9\x56\x43\xce\xe6\x73\xcb\x78\xe9\xac\x1e\x16\xd6\x70\xaa\xb5\xc3\xca\x51\xff\x88\x14\x9a\x0d\x6b\x26\x96\xb5\xc4\x8f\xcb\x64\x03\x35\xf5\x46\x38\x5f\x99\xa8\x71\x9a\xa5\xe9\x1d\x55\x68\xde\x5e\x30\x85\xb4\x51\x4c\xd4\x61\xa3\xbb\xef\x33\x28\xcd\xa4\xe8\xcb\x62\xf0\xca\xb3\x4e\x07\x45\x9b\xf2\xa8\xdc\x13\x8d\x83\x6e\xb8\xe5\x1b\x3a\x41\x95\x15\x05\xc9\xd0\x5c\x4a\x8e\x1e\xd2\x24\x1a\x92\x5f\x0b\x66\x48\x96\x26\x0a\x8c\x55\x02\x19\x65\x21\x5d\x93\x2c\x4d\x9d\x3e\x62\x5e\xea\xf4\x5d\x0a\xf2\xa9\xb7\xe5\x33\x55\xe4\xf5\xbe\x9d\x03\x84\xef\xc2\x0a\x0f\x10\xc6\xdb\xaf\xc8\x48\x64\x35\x20\xe2\x4f\x68\xc4\x2a\x04\x4d\x6b\x56\x19\xce\x22\xea\x99\x94\xdc\x63\x76\xde\x9c\xd3\x62\x01\xe5\x00\xe1\xc2\x2f\xf0\xc0\x9b\xb5\xf9\xbe\x8d\xd1\x06\xa2\x67\x58\x07\x72\x01\x15\xb5\xdc\xdc\x40\x23\xd5\x6a\x80\x70\xe3\x17\xce\xb0\xdf\x1f\xbf\xbb\x71\x9f\x65\xd0\x40\x41\x82\x2a\xa9\x50\x6b\xb5\xbb\x80\xb6\xad\x7e\x01\xf6\x05\xd3\x4b\x87\xc3\xf4\xd2\xe1\xfd\xe1\xdd\x1f\x77\x70\xdd\xfe\x93\xa8\x63\xaa\x34\x90\x2c\x5d\x6f\x33\x34\x5d\x89\x62\xa1\xa4\x60\xff\x81\xf2\x0c\x2a\xa9\x60\x6a\x99\x01\x12\x33\xf7\xe5\xeb\x7c\x65\xc0\xe5\x62\x38\x44\x13\x2b\x90\x14\x05\xa4\x09\xab\x0e\x6b\xe6\xe4\x04\x61\xec\x34\x93\x83\x92\x19\x20\x50\x0a\xfd\xf5\x64\x53\x3a\xb1\x50\x6e\x05\xfb\x6e\x81\xaf\x0e\x2b\x89\xb8\x6c\x56\x94\x6b\xc8\xd0\x70\xe8\x80\x4b\x10\xd2\x80\x46\x54\xac\x90\x36\xb4\x58\xe6\xe8\x56\x03\xd2\x2d\x14\xac\x62\x45\xd8\x43\x04\xf2\x3a\x47\xb8\xa8\x38\x13\xf6\xbe\xd2\xc7\xd8\xe5\xbe\x04\xcd\x14\x94\x59\x9a\x24\x97\xf7\x2d\x14\x86\x80\x52\x59\x3e\x92\x66\x26\xc9\x15\xbd\x83\x4f\x45\x61\x95\x82\x92\x64\x59\x9a\x26\x49\x49\x0d\xdd\xd8\xec\xfa\x41\x7e\x43\x95\x5e\x50\x4e\x0e\x5c\x7b\x19\x66\xd2\x95\xba\x43\x4e\x93\x75\xba\xa9\xfd\x10\xe0\x87\x75\xba\x1e\x04\xb6\x38\x8d\xb8\x9b\xed\xc4\x1d\x51\xce\x91\x90\x25\xe8\x34\x71\xd9\x73\xe6\x81\x52\x52\xf9\x74\x70\x10\xfe\x68\x86\xde\xa3\x23\x9f\x05\x27\x8f\xd6\xdf\x8a\x26\xda\x1f\x3c\x7b\xfd\xcb\x6e\x1c\x66\xfd\xb0\x41\x74\x8d\x21\xf8\xe9\x9b\x4d\x08\xe6\x36\xff\x1f\x98\x28\x27\x52\xfa\x26\xf0\x92\x8c\x44\x9d\x0d\x57\x65\xbb\x3a\xaf\xae\x64\x03\x24\xcb\xf2\x99\x24\x53\x5b\x14\x10\x6d\xec\x94\xa6\x00\xe5\x84\x8a\x52\x36\xa4\xb7\x1b\x59\x34\x35\xa5\xb4\xee\x7f\xb0\xeb\xa3\x6f\xa4\xff\x50\xcc\x80\x4a\xd7\xd9\xe3\xf4\x38\xad\x0c\xa8\x1d\x76\x3c\x91\x9e\x2e\x95\xd9\x01\x6f\xf6\xfc\x98\x40\x23\xef\x60\xbc\x1f\xc0\x47\xaa\xec\xc0\xcb\x3d\xa4\x0b\xe0\x60\xe0\x93\x6a\x17\x54\x40\x39\x91\xd6\x80\x3e\x8c\xcd\xba\x6b\xb1\x33\xd0\xe6\x7a\x3b\x0d\x89\x41\x6f\xba\xde\x3c\xf3\x56\x4f\xa0\x66\xda\x80\xfa\x40\x19\xbf\xa2\xa2\xe4\xa0\x88\x5b\x67\x69\x32\xb1\x62\xda\x42\xa1\x89\x19\x20\xdc\x03\x41\x3e\x34\xd8\x77\x17\x7f\xc9\xd8\xea\xc5\x69\xdb\x9e\x8a\xf2\x5c\x8a\x8a\xa9\x86\xd0\xb6\x45\x6f\x3a\x93\x4f\xdb\xd6\x5f\x15\x3d\xa1\x6d\x9b\xbb\x13\x8f\x64\xf4\xf2\x0e\x84\xb1\x94\xf3\x55\x17\x78\xf2\xe5\x6b\x18\x51\x83\x40\x81\x0c\x3d\xa0\x48\x28\x87\x73\x2d\xb4\xa1\xa2\x80\xa9\xa1\x3e\x0e\x68\x3d\x40\xc7\x47\x6f\xdc\x54\xce\xa7\x50\x48\x51\x66\xf9\x74\x21\x2d\x2f\xc9\xe5\x77\x4b\xf9\x06\xee\x01\x4f\x6e\x47\xa3\xeb\xd1\x47\xbc\xee\x05\xd9\x41\x46\x17\xb6\x39\xda\x67\xc2\x61\xb0\x63\x18\x26\xa0\x0d\x55\xe6\xa7\xce\x77\x7a\xbf\x1d\xff\x3b\x0f\x4e\x5b\xf6\x51\x01\x35\xa0\x66\x0b\x2a\xc8\xdd\xce\x23\x61\x3b\xdd\x69\xcb\x62\x2c\xa6\x5b\xdb\xfa\x5d\xff\x74\xa3\xb0\xcf\xfb\x99\x24\x67\x30\x62\xdc\xbb\xbb\xc5\xd9\x20\x84\x57\x53\x7e\x43\x97\x40\xf6\xaf\x79\x0e\x4a\xc1\xf7\x27\xa0\xfc\x28\x9c\x50\x51\x03\xc1\xef\x4f\x10\x46\x6f\x51\xf4\xeb\x79\x3c\x1f\xe3\x2d\x6c\xcf\x9a\x9d\x78\x5d\x51\x3d\xa3\x7a\xd9\x7b\xfb\xc4\xa3\x7b\xb1\xc4\xc7\xf9\x9f\xff\x94\x1f\x79\xd6\xf4\xce\xde\x58\x6e\xd8\xb6\xd6\x5e\x80\xf2\x97\xa3\x88\x12\x61\xb4\x06\x65\x6e\x35\xe8\xb1\x92\xf7\xab\x0b\xeb\x22\x35\x35\xb4\x66\xa2\xbe\xae\xc6\x0a\x34\x08\x43\x2a\x76\x6f\xac\x82\x11\x6d\x60\x93\xcd\x87\x34\x39\x97\xc2\xc0\xbd\x21\xf8\x07\x33\x0b\x44\x05\xb2\xe2\xe0\x11\xd4\x6f\x71\x49\x78\x38\x5c\xd2\x62\xd1\xeb\x8c\x89\x1b\x4b\xbb\xaf\xab\xb0\x9d\x4c\x97\xac\x25\x78\x62\x85\x60\xa2\x46\x11\xda\xf5\x1f\xff\x52\x49\x92\x75\x9a\x24\x6b\x3f\x88\xaf\x0d\xc1\x56\xbb\xa9\x8f\x5a\xe7\x07\x2a\xbd\x23\x6e\xd8\x3b\x4f\xdc\x6c\x6f\x83\x2f\xbb\x06\x25\x5e\xfb\xa0\x00\x47\xf0\xc3\x87\x83\xf8\x6b\x9e\xcc\x72\x92\x94\x50\x81\x0a\x57\xe6\xe7\x5c\xfa\x47\x93\xdb\x9f\xb7\x1f\x18\x07\x07\xd9\xbd\xf6\xf3\xbf\x49\x26\x48\x1c\x72\xfb\x3d\xe1\x2d\x36\x4d\x1b\x7c\x2a\x9a\xd2\x1d\x73\xbf\x18\xf2\x73\xd9\x34\x54\x94\x04\x17\x2d\x1e\x3c\x32\x3f\xdd\x1d\x03\x14\xee\xf2\x87\xe3\xf0\x6c\xca\x7c\x62\xc5\x0b\x8d\x97\xdd\x78\x21\x1d\x90\x93\x19\x45\xab\x8a\x15\xc1\x54\x33\x40\x5c\xd6\xfa\x20\x4c\xae\xa9\x2b\x01\x66\x16\x94\x89\x4f\xda\xae\xc3\x38\x96\x8e\x76\x71\xdf\x56\x51\x36\xf0\xba\xe1\xc6\xb0\xde\xb6\x96\xab\xd9\x6c\xfc\x6d\x3c\xf9\xf4\xcf\x7f\x9d\x38\xba\x85\xe8\xde\x4e\xfe\x3e\x40\x5e\x34\x7d\x4c\xb6\xf6\x20\x3f\xf3\x38\x8a\xbc\x4f\x51\x38\x53\x16\x76\xa5\xce\xd5\x28\xbc\x74\xbf\x05\xe2\x5b\x2f\x29\x41\x9b\x5b\xc5\x37\x51\xb0\x8a\xc7\x87\xf2\xc6\x8a\x67\xef\xef\xc9\xba\x00\x86\x77\xed\x85\x9f\xa8\x61\xc0\xfa\x50\x6c\x82\x5f\x35\x26\x9f\xb6\x8a\x09\x53\x11\xfc\x4a\xe7\xaf\x5c\x18\xa3\x1d\xf9\x95\xd4\x46\x50\xf7\xb4\xd9\xee\x8d\xa5\x1f\x0c\x21\x18\xfb\xee\xaf\xb3\xd4\xfd\xed\x52\x7f\x24\xf7\xb3\xf8\x04\xd9\x1d\xc5\x16\x54\x23\x21\x51\xb4\x6f\x97\x4a\xac\x42\xbf\x7b\x8c\xc5\xbb\x24\xde\x74\x88\x2d\x8d\xdd\xe3\xef\xd7\x09\xf3\xff\xf0\xa5\x2b\xe7\x1e\x5f\x9e\x2e\x9e\x67\xd8\xf2\xcb\x64\xf9\x1f\xb8\xd2\xa3\xca\x86\x29\xbe\xe8\x9f\xb7\xfa\xd9\x8a\x8f\xc2\x68\xfe\x7e\xcd\x3f\x4b\x88\x50\x48\xff\x0d\x00\x00\xff\xff\xfa\xd6\x31\x80\x31\x11\x00\x00")

func srcLanguageIntegration_integration_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegration_integration_suite_testGo,
		"src/LANGUAGE/integration/_integration_suite_test.go",
	)
}

func srcLanguageIntegration_integration_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegration_integration_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/_integration_suite_test.go", size: 4401, mode: os.FileMode(420), modTime: time.Unix(1576524806, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegration_simple_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcd\x6e\x9c\x30\x10\x3e\xe3\xa7\x98\xfa\x64\xaa\x08\x9e\x60\x0f\x24\xbb\x5a\x6d\x55\x25\x91\x76\x7b\xaa\xaa\x95\x81\x01\xa6\x01\xdb\xb2\xc7\xcd\xa2\x15\xef\x5e\x99\x64\x9b\x56\xea\x0d\xc6\xdf\x37\xf3\xfd\x38\xdd\xbc\xe8\x1e\x81\x0c\x63\xef\x35\x93\x35\x67\xc6\xc0\x42\xd0\xe4\xac\x67\x50\x22\x93\x4e\xf3\x50\x76\x34\x62\xfa\x90\x42\x64\xb2\x27\x1e\x62\x5d\x34\x76\x2a\x9b\xd1\xc6\xb6\xb3\xd1\xb4\x7e\x2e\x47\xaa\xeb\x48\x63\x9b\xd6\x96\x4d\xe4\x51\x87\x90\x08\x05\xfc\x4d\xb1\x26\x50\xd9\x93\x79\xe9\xad\xfc\xff\x9b\x9d\xb0\xd7\x52\xe4\x42\xfc\xd2\x1e\xce\xb0\x81\x2d\x86\xc6\x53\x8d\x4a\x1e\x69\x72\x23\xc2\xe1\x43\x31\x9c\x30\xb0\xbc\x83\x2e\x9a\x46\xe5\x70\x15\x59\x62\x69\xe7\xe0\xf3\xbb\x86\xa2\x72\x4e\x64\x55\xc7\xe8\x77\xba\x19\xd4\x07\x32\xa3\x6e\x45\x7e\xda\x80\xa1\x71\x9d\x64\xda\xb9\x62\x8b\x81\xbd\x9d\x55\x2e\xb2\x6c\x11\xeb\x0c\x56\x88\xc8\x96\x5c\x88\xac\x2c\xe1\xf4\xb4\x7d\x82\xd3\x40\x01\x52\x62\x40\x01\x1c\x9a\x96\x4c\x0f\x35\x36\x3a\x06\x04\x62\x68\xa2\xf7\x68\x78\x9c\xa1\xd3\x34\x86\x02\x0e\x2b\xf2\x67\x0c\x0c\xda\x00\x5e\x74\x72\x23\xb2\xe7\x03\x2b\x99\x8e\xb4\xe8\x46\x3b\x87\x7f\xec\xbc\x5f\xbf\x99\x79\xc4\x57\x75\xab\xa3\xf8\x62\xc9\xa8\xda\x6d\xc9\xdf\x81\xec\xe8\xc2\xd1\x63\x62\xcb\xb0\xe6\xb4\xb6\x29\xf3\xfc\x6d\x49\x71\x7f\x6b\x27\xc0\x06\xbe\xff\x08\xec\xc9\xf4\x57\x79\xbd\x7e\xad\x1e\xf7\xdf\xaa\xfd\x6e\x59\xce\x7f\x1a\x94\xc9\xf8\x73\x0c\x43\xe5\x5c\x65\xda\x07\x6b\x3a\xf2\x93\xd2\xce\xa5\x75\xbb\x8b\xc3\x86\xd3\x5f\xb1\x47\xbe\xb7\xed\xac\x64\x29\xf3\xbc\x38\x59\xf5\x60\x0d\x6b\x32\xc7\x58\xbf\x5d\x50\xf2\x68\x27\xe4\x21\x85\x63\x0d\xcc\x36\x7a\x78\xc5\x3a\x10\xe3\xaa\x6d\xc9\xc5\x92\x8b\xdf\x01\x00\x00\xff\xff\x84\x5f\x6d\x48\x8d\x02\x00\x00")

func srcLanguageIntegration_simple_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegration_simple_testGo,
		"src/LANGUAGE/integration/_simple_test.go",
	)
}

func srcLanguageIntegration_simple_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegration_simple_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/_simple_test.go", size: 653, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supplyGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x93\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x18\x7c\xb2\x97\x22\xdf\xf7\x96\x6d\x96\x65\x21\x6d\xa0\xe9\x9f\x43\xe9\x41\xb1\x27\x8a\xa8\x2c\x89\xd1\x08\xd6\x04\x7f\xf7\x62\xc7\x76\x36\x29\x85\x9e\xe2\x93\x2d\x3f\xcd\x7b\x3f\xcd\x28\xa8\xfa\xb7\xd2\x08\x31\x85\x60\x3b\x21\x4c\x1b\x3c\x31\x14\x22\xcb\x8d\xcf\x85\xc8\x72\x6d\xf8\x98\xf6\xb2\xf6\x6d\x55\x5b\x9f\x9a\x83\x4f\xae\xa1\xae\xb2\x66\xbf\x4f\xc6\x36\x43\x85\x5c\x94\x42\x70\x17\x10\x76\xac\x34\x12\x18\xc7\x48\x07\x55\x23\x9c\x44\x56\x55\x5f\xb7\xeb\xed\x23\xec\x10\xa1\xf5\x84\xe0\x03\x1b\xef\x22\x28\x86\x23\x73\x88\x8f\x55\xf5\x3f\x2e\xd5\xde\xfa\x7d\xd5\xaa\xc8\x48\x55\x1c\x8d\xa4\xf6\x22\x7b\x1a\x04\x6b\x43\x45\x09\x91\xc9\x38\x2d\xb2\x35\x86\xbf\x16\xe2\x6b\xf3\x76\xb3\x72\xa5\xe9\x27\x84\x4f\xca\x99\x03\x46\xbe\x03\x44\x3b\x59\x8d\x18\x2b\x6b\xd7\x18\xd0\x35\xe8\xea\xee\x3b\x52\x1c\xca\x17\xe7\x70\x25\xfc\xfc\x75\x09\x7e\x50\xc9\xf2\xa4\x58\x04\xc5\x7b\x17\x79\xa9\xf4\x01\x90\xc8\x53\xb9\xf0\xbd\xba\xc8\xca\xda\xbb\x74\xc9\xcc\x5e\x23\xe1\xe4\x7c\xc9\xf6\xef\xcc\x33\xd5\x98\x7d\xd9\xb9\x75\xb6\xbb\xe6\xbe\x55\xce\x90\x1f\x7d\xdb\x2a\xd7\xdc\x01\xb1\x3e\x3b\x8d\x80\xcf\x6f\x58\x27\xc6\x25\x9b\xf1\xf2\x07\x19\x46\xba\x7a\x9d\xff\x4a\x29\x6f\x30\xb7\x89\x43\xe2\xa2\x31\xb4\x88\x02\x79\x4d\xaa\x5d\xbe\x15\xe9\xf8\x7e\xe7\xe2\x75\xd3\xe5\xdd\x70\xa1\x0d\x8e\x85\x52\xcd\x03\xfe\x32\xd8\xcb\x88\x2f\x07\x8b\x74\x19\x0b\x91\x4d\x97\x18\x60\xba\xce\x22\x9b\x8f\x13\xe6\x83\x15\xd9\xc6\x6b\x38\x3f\x0f\x57\x5d\xdc\x78\x3d\x6c\xe9\x85\x38\x24\x57\x43\x11\xe1\x61\xce\x52\xc2\x97\xe4\x8a\x89\x76\x48\x14\x07\xb5\x7c\x42\x6d\xdc\x8e\x31\x14\xf9\xa8\xec\x8c\xd3\x70\x3a\x6d\x56\x9f\x5f\xbe\xad\x5e\x9e\xfb\x3e\x2f\xc5\xd0\x3c\x38\x77\x6f\x0a\x0a\xca\x75\xd0\xcc\x23\x63\x30\xc2\x11\x09\xa5\x94\x42\x64\x84\x9c\xc8\x81\x33\x56\xf4\xe2\x4f\x00\x00\x00\xff\xff\xe9\xfa\x24\x9e\xe3\x04\x00\x00")

func srcLanguageSupply_supplyGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supplyGo,
		"src/LANGUAGE/supply/_supply.go",
	)
}

func srcLanguageSupply_supplyGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supplyGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply.go", size: 1251, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supply_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\xc2\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x9f\xf6\x2d\xc4\x73\xdb\xbb\xc4\xb8\xae\x4b\xdb\x24\x34\x9b\x83\x88\xef\x2e\x55\x8f\xde\x06\x3e\x66\xa6\x84\x38\x07\x26\xac\xad\x94\xe5\x7e\x52\xaa\x0a\x20\x6b\xc9\x9b\xa2\x03\xd3\xa1\x65\xd1\x5b\x3b\x77\x31\xaf\x7d\x4e\x55\x7a\x96\x34\x73\xb6\xbf\x2d\xaf\xc4\xc1\x02\x18\xbb\x2f\x49\x62\x0b\x1e\xe0\xda\x52\xc4\x89\xaa\x8e\xef\x17\xa7\xf8\xf7\xe5\x6e\xf2\xf8\x00\x33\x10\x4b\x55\xda\x0e\x41\x96\x63\x48\x97\x85\x36\xb7\x67\x0f\x66\x68\x69\x2c\x14\xab\xd3\x7f\xb4\x9f\x3e\x8e\x4d\x94\xac\x87\x27\xbc\x02\x00\x00\xff\xff\x0e\xd4\xc8\xb7\xbf\x00\x00\x00")

func srcLanguageSupply_supply_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supply_suite_testGo,
		"src/LANGUAGE/supply/_supply_suite_test.go",
	)
}

func srcLanguageSupply_supply_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supply_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply_suite_test.go", size: 191, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supply_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xc2\x30\x10\x86\xe7\xf8\x29\x4e\x9e\x6c\xa9\xc4\x3b\x52\x86\x4a\x30\x74\x62\x28\x3b\x32\xce\xe1\x58\x71\x7c\xae\x7d\x69\x41\x15\xef\x5e\x25\xb0\x20\x75\x3c\x7d\x77\xf7\x7f\x7f\xb6\x6e\xb4\x1e\xa1\xce\x39\xc7\xdb\x89\xb1\xb2\x10\x61\xca\x54\x18\x94\x68\x5a\x90\x3e\xf0\x30\x9f\x5b\x47\x93\xa1\x54\x83\xf1\x21\x8d\x9e\xe4\xff\x8c\x26\xf4\x56\x0a\x2d\x84\x31\x9e\xb6\x1e\x13\x16\xcb\x08\x13\xb9\xd1\x63\x82\x4d\xa5\xb9\x38\xec\x1e\x71\xad\x27\xd8\x6c\x7a\xac\x1c\x92\xe5\x40\xa9\x5b\xf6\xea\x6a\xf1\x60\x4f\xbd\xee\x45\xef\xdb\x16\x38\x41\x07\x3b\xac\xae\x84\x33\x2a\xf9\xb9\x62\xf9\x06\x97\x39\x39\xa5\xe1\x57\x34\x1f\xac\x24\x5e\xed\x94\x23\xc2\x72\xf6\x02\x9b\xfd\x35\xa3\x63\x75\xb1\xb1\xa2\x6e\x8f\xa4\xf6\x5f\xb3\x8d\xcf\x59\x8b\xe6\xae\x45\x63\x0c\x1c\x0f\xbb\xc3\x16\xde\xfb\x7e\x7d\x51\x61\xc0\x82\xc0\x04\x6e\x40\x37\x42\x48\x95\x6d\x8c\xd0\x63\xc6\xd4\x63\x72\xb7\x35\x62\x29\x52\xe1\x87\xca\x28\xee\x5a\xfc\x05\x00\x00\xff\xff\x96\x3c\x37\x05\x61\x01\x00\x00")

func srcLanguageSupply_supply_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supply_testGo,
		"src/LANGUAGE/supply/_supply_test.go",
	)
}

func srcLanguageSupply_supply_testGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supply_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply_test.go", size: 353, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCli_cli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xcd\xaa\xc2\x30\x10\x40\xe1\x75\xe6\x29\x86\xac\x92\xcb\xa5\x7d\x88\x82\xb8\x6e\xbb\x97\x18\xc7\x38\x34\x7f\x34\x93\x85\x88\xef\x2e\x05\x97\xee\x0e\x7c\x70\xaa\xf3\x9b\x0b\x84\xc9\x71\xbe\x08\x35\x01\xe0\x54\xcb\x2e\x68\x40\x0d\xa8\x03\xcb\xa3\x5f\x07\x5f\xd2\x58\x72\xe3\x31\x70\xde\x42\xd1\xbf\xad\x24\x0a\x4e\x03\x28\x7d\x9c\x38\x07\x0d\x16\xe0\xde\xb3\xc7\x95\x9a\x4c\x91\x8d\xe0\xdf\xd7\x86\xd5\xe2\x0b\xd4\x4c\x81\x9b\xd0\x7e\x72\x1c\xcf\x2e\xdf\x22\xed\xe6\x68\x0b\x6a\xee\x79\xa9\xe4\x9b\x91\x7f\xd4\x4b\xaf\x35\x3e\x71\x8a\x8c\x4b\x67\x21\x6d\xe1\x0d\x9f\x00\x00\x00\xff\xff\xe6\x5b\xbf\xd2\xbe\x00\x00\x00")

func srcLanguageSupplyCli_cli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCli_cli_suite_testGo,
		"src/LANGUAGE/supply/cli/_cli_suite_test.go",
	)
}

func srcLanguageSupplyCli_cli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCli_cli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/_cli_suite_test.go", size: 190, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCli_mainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xdf\x6f\xda\x48\x10\x7e\xf6\xfe\x15\x73\x96\xee\x64\x4b\xc8\x84\xbb\x4b\xd3\x52\xf1\x40\x08\x8a\x5a\x25\x54\x2a\x4a\xab\xaa\xaa\xaa\xc5\x1e\xcc\x88\xf5\xae\xb5\x5e\x87\x22\xc4\xff\x5e\xad\x59\x1b\x48\xb0\x12\xfa\xe4\x64\x76\x7e\x7c\xf3\xcd\xcc\x47\xce\xe3\x25\x4f\x11\x32\x4e\x92\x31\xca\x72\xa5\x0d\x04\xcc\xfb\x09\xfe\x66\x73\x37\x9c\xdc\x3e\x0c\x6f\xc7\xdb\x6d\x77\xa1\xd4\xb2\xf0\x99\x77\x6c\x2d\xca\x3c\x17\x6b\x6b\x56\xd5\x63\xce\xcd\xa2\x3b\x27\x81\xf6\x0f\x6b\x30\x94\xa1\xcf\x98\xe7\xa7\x64\x16\xe5\x2c\x8a\x55\xd6\x8d\x85\x2a\x93\xb9\x2a\x65\xa2\xd7\x5d\x41\xb3\x59\x49\x22\xb1\x38\x7c\x16\x32\x36\x2f\x65\x5c\xa1\x09\x42\xd8\x30\x4f\xa8\x34\x45\x0d\xfd\x01\x1c\x7a\x46\x13\x5c\xdd\x55\x2f\x81\x2a\xa2\xa9\x49\x54\x69\x42\xc6\xbc\xc6\xe1\x86\x74\x07\x50\x3f\x0f\xbc\x45\x73\x7d\xe0\x14\x84\xcc\xa3\x79\xe5\xf9\xd7\x00\x24\x09\x5b\xd3\x15\x8d\xc6\x5a\x2b\x1d\xf8\x0f\x92\xcf\x04\x82\x51\x90\xa0\x41\x9d\x91\x44\x68\x12\x42\x42\x1a\x63\xa3\xf4\xba\x0f\x7f\x17\x7e\x55\x34\x64\x9e\xa7\x8a\x68\xfc\x8b\x4c\xf0\x2e\x64\xde\x96\x31\x2f\xe3\x92\xe6\x58\x98\xd3\xa8\x26\xb8\xba\x77\x0e\xc1\x71\x0f\x3b\x28\x1d\xb0\x44\x46\x13\xb5\x0a\xc2\xb3\x10\x0b\xc5\x93\x03\xb0\x35\x8a\xd3\x58\x7b\x17\x15\x58\x8f\x64\x61\xb8\x10\xa7\x69\xff\x50\x3f\x06\x75\x32\x4b\x7c\x61\x78\xcb\x98\xa6\xd5\x8b\x1d\xd3\x50\xa7\xc5\xf7\x5e\xff\xc7\xbe\xa9\x7d\x86\xba\xa5\xfe\x00\x76\xa9\xa2\xd1\x02\xe3\x65\x33\xaa\x2f\x5c\x50\x12\x84\xef\x9f\xf6\xdd\x40\xef\x39\x9e\x55\x11\xdd\x2f\x13\xd2\x43\x21\x82\x7a\x11\xa3\x8f\x8a\x64\xe0\xf2\xde\x60\x5e\xcd\xbd\x03\xfe\x8c\xa4\x1f\x76\xe0\xe2\xea\xf2\x32\x3c\x2f\x52\xd0\x6c\x1f\xd9\x80\x1f\x40\xc3\x5c\x34\x45\x33\xcc\xf3\x11\x8f\x17\x68\x83\xea\xa6\xea\xff\xc3\xe7\xad\xb4\x8d\xb0\x40\x53\xe6\xc0\xf3\x1c\x62\x1b\x6d\x17\xae\x65\x7c\x6f\xdd\xf8\x6a\x34\x35\xbd\xd1\xd0\x5e\xe9\xa7\x47\xd4\x9a\x12\x3c\x68\xa7\x38\x13\x0a\xb7\x79\x40\xb9\x44\xd1\x3a\x13\x60\x99\x2a\x5a\xf0\x5c\xb9\x99\xec\xd0\x1c\x2d\xc6\xe7\x52\x5e\xe3\x5c\x69\x1c\xa9\x2c\x27\x51\x83\x7a\xc5\x6e\xef\xc2\xc0\xc5\xb5\x54\xfe\xd7\x55\xde\x6f\xd5\x9f\xee\xc5\xab\xb9\x89\x35\x72\x83\x30\x23\xf9\x92\x24\xf4\xfe\x3b\xe2\xc5\xd5\x9f\xa2\xb1\xa7\x42\x32\x1d\xcb\x47\xd2\x4a\x66\x28\xcd\x79\xf2\xb4\xdb\x14\xdc\x87\xc3\x23\xd7\x64\x5f\xdb\x26\xf4\xbf\x43\x52\x54\x87\x57\x89\x79\x34\xb5\x1f\x42\x6d\x2b\xdd\x37\x7a\xd1\xe8\x17\xf3\xbc\x46\x02\xfa\xfb\x85\xb7\xf6\xdd\xa9\xf7\x01\x5c\x4f\xd6\x36\x52\x59\xc6\x65\xd2\x07\xf8\xe7\x68\x01\x9c\x7d\xb3\xb5\x4e\x77\x2a\xb5\x51\x00\xb5\x32\x1c\xf1\x63\x97\xe5\x35\x44\x54\x9f\x96\x46\x2f\x9f\x2d\x84\xa3\xfd\xab\x26\x83\x23\x25\xe7\x94\x7e\xcb\x44\x20\x49\xbc\x34\xf2\xea\x03\x2b\x4d\x86\x64\x0a\x71\x15\x6a\x4f\xa1\xa5\xf2\x9b\x27\x47\xb9\x97\x88\x91\x40\x2e\xcb\xbc\x96\x89\x13\xea\x76\x72\xd0\xb1\x0d\x83\x43\x49\x68\xa9\xbc\xfb\xe9\xd9\xb2\xdf\x01\x00\x00\xff\xff\x6e\xf7\xa6\xd4\xe3\x07\x00\x00")

func srcLanguageSupplyCli_mainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCli_mainGo,
		"src/LANGUAGE/supply/cli/_main.go",
	)
}

func srcLanguageSupplyCli_mainGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCli_mainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/_main.go", size: 2019, mode: os.FileMode(420), modTime: time.Unix(1568814625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func srcLanguageVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageVendorGitkeep,
		"src/LANGUAGE/vendor/.gitkeep",
	)
}

func srcLanguageVendorGitkeep() (*asset, error) {
	bytes, err := srcLanguageVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1565991312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".envrc":                                              Envrc,
	".gitignore":                                          Gitignore,
	"README.md":                                           readmeMd,
	"VERSION":                                             version,
	"bin/compile":                                         binCompile,
	"bin/detect":                                          binDetect,
	"bin/finalize":                                        binFinalize,
	"bin/release":                                         binRelease,
	"bin/supply":                                          binSupply,
	"fixtures/.gitkeep":                                   fixturesGitkeep,
	"fixtures/simple_test/some_file.txt":                  fixturesSimple_testSome_fileTxt,
	"manifest.yml":                                        manifestYml,
	"scripts/brats.sh":                                    scriptsBratsSh,
	"scripts/build.sh":                                    scriptsBuildSh,
	"scripts/install_go.sh":                               scriptsInstall_goSh,
	"scripts/install_tools.sh":                            scriptsInstall_toolsSh,
	"scripts/integration.sh":                              scriptsIntegrationSh,
	"scripts/unit.sh":                                     scriptsUnitSh,
	"src/LANGUAGE/Gopkg.toml":                             srcLanguageGopkgToml,
	"src/LANGUAGE/finalize/_finalize.go":                  srcLanguageFinalize_finalizeGo,
	"src/LANGUAGE/finalize/_finalize_suite_test.go":       srcLanguageFinalize_finalize_suite_testGo,
	"src/LANGUAGE/finalize/_finalize_test.go":             srcLanguageFinalize_finalize_testGo,
	"src/LANGUAGE/finalize/cli/_cli_suite_test.go":        srcLanguageFinalizeCli_cli_suite_testGo,
	"src/LANGUAGE/finalize/cli/_main.go":                  srcLanguageFinalizeCli_mainGo,
	"src/LANGUAGE/hooks/_hooks_debug.go":                  srcLanguageHooks_hooks_debugGo,
	"src/LANGUAGE/hooks/_hooks_suite_test.go":             srcLanguageHooks_hooks_suite_testGo,
	"src/LANGUAGE/integration/_integration_suite_test.go": srcLanguageIntegration_integration_suite_testGo,
	"src/LANGUAGE/integration/_simple_test.go":            srcLanguageIntegration_simple_testGo,
	"src/LANGUAGE/supply/_supply.go":                      srcLanguageSupply_supplyGo,
	"src/LANGUAGE/supply/_supply_suite_test.go":           srcLanguageSupply_supply_suite_testGo,
	"src/LANGUAGE/supply/_supply_test.go":                 srcLanguageSupply_supply_testGo,
	"src/LANGUAGE/supply/cli/_cli_suite_test.go":          srcLanguageSupplyCli_cli_suite_testGo,
	"src/LANGUAGE/supply/cli/_main.go":                    srcLanguageSupplyCli_mainGo,
	"src/LANGUAGE/vendor/.gitkeep":                        srcLanguageVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".envrc":     &bintree{Envrc, map[string]*bintree{}},
	".gitignore": &bintree{Gitignore, map[string]*bintree{}},
	"README.md":  &bintree{readmeMd, map[string]*bintree{}},
	"VERSION":    &bintree{version, map[string]*bintree{}},
	"bin": &bintree{nil, map[string]*bintree{
		"compile":  &bintree{binCompile, map[string]*bintree{}},
		"detect":   &bintree{binDetect, map[string]*bintree{}},
		"finalize": &bintree{binFinalize, map[string]*bintree{}},
		"release":  &bintree{binRelease, map[string]*bintree{}},
		"supply":   &bintree{binSupply, map[string]*bintree{}},
	}},
	"fixtures": &bintree{nil, map[string]*bintree{
		".gitkeep": &bintree{fixturesGitkeep, map[string]*bintree{}},
		"simple_test": &bintree{nil, map[string]*bintree{
			"some_file.txt": &bintree{fixturesSimple_testSome_fileTxt, map[string]*bintree{}},
		}},
	}},
	"manifest.yml": &bintree{manifestYml, map[string]*bintree{}},
	"scripts": &bintree{nil, map[string]*bintree{
		"brats.sh":         &bintree{scriptsBratsSh, map[string]*bintree{}},
		"build.sh":         &bintree{scriptsBuildSh, map[string]*bintree{}},
		"install_go.sh":    &bintree{scriptsInstall_goSh, map[string]*bintree{}},
		"install_tools.sh": &bintree{scriptsInstall_toolsSh, map[string]*bintree{}},
		"integration.sh":   &bintree{scriptsIntegrationSh, map[string]*bintree{}},
		"unit.sh":          &bintree{scriptsUnitSh, map[string]*bintree{}},
	}},
	"src": &bintree{nil, map[string]*bintree{
		"LANGUAGE": &bintree{nil, map[string]*bintree{
			"Gopkg.toml": &bintree{srcLanguageGopkgToml, map[string]*bintree{}},
			"finalize": &bintree{nil, map[string]*bintree{
				"_finalize.go":            &bintree{srcLanguageFinalize_finalizeGo, map[string]*bintree{}},
				"_finalize_suite_test.go": &bintree{srcLanguageFinalize_finalize_suite_testGo, map[string]*bintree{}},
				"_finalize_test.go":       &bintree{srcLanguageFinalize_finalize_testGo, map[string]*bintree{}},
				"cli": &bintree{nil, map[string]*bintree{
					"_cli_suite_test.go": &bintree{srcLanguageFinalizeCli_cli_suite_testGo, map[string]*bintree{}},
					"_main.go":           &bintree{srcLanguageFinalizeCli_mainGo, map[string]*bintree{}},
				}},
			}},
			"hooks": &bintree{nil, map[string]*bintree{
				"_hooks_debug.go":      &bintree{srcLanguageHooks_hooks_debugGo, map[string]*bintree{}},
				"_hooks_suite_test.go": &bintree{srcLanguageHooks_hooks_suite_testGo, map[string]*bintree{}},
			}},
			"integration": &bintree{nil, map[string]*bintree{
				"_integration_suite_test.go": &bintree{srcLanguageIntegration_integration_suite_testGo, map[string]*bintree{}},
				"_simple_test.go":            &bintree{srcLanguageIntegration_simple_testGo, map[string]*bintree{}},
			}},
			"supply": &bintree{nil, map[string]*bintree{
				"_supply.go":            &bintree{srcLanguageSupply_supplyGo, map[string]*bintree{}},
				"_supply_suite_test.go": &bintree{srcLanguageSupply_supply_suite_testGo, map[string]*bintree{}},
				"_supply_test.go":       &bintree{srcLanguageSupply_supply_testGo, map[string]*bintree{}},
				"cli": &bintree{nil, map[string]*bintree{
					"_cli_suite_test.go": &bintree{srcLanguageSupplyCli_cli_suite_testGo, map[string]*bintree{}},
					"_main.go":           &bintree{srcLanguageSupplyCli_mainGo, map[string]*bintree{}},
				}},
			}},
			"vendor": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{srcLanguageVendorGitkeep, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
